<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:FMO.Shared">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml" />
        <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <local:BooleanToVisibilityReverseConverter x:Key="BooleanToVisibilityReverseConverter" />

    <SolidColorBrush x:Key="LabelBrush">Gray</SolidColorBrush>

    <ControlTemplate x:Key="Tpl.Changeable.Default" TargetType="local:ChangeableContainer">
        <DockPanel
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            Background="Transparent"
            LastChildFill="True">

            <Grid>
                <TextBlock
                    VerticalAlignment="Center"
                    DockPanel.Dock="Left"
                    Foreground="{DynamicResource LabelBrush}"
                    Text="{Binding Binding.Label, RelativeSource={RelativeSource AncestorType=local:ChangeableContainer}}" />

                <TextBlock
                    Margin="0,-4,0,0"
                    HorizontalAlignment="Right"
                    FontSize="6"
                    Foreground="Purple"
                    Text="▼"
                    Visibility="{Binding Binding.IsInherited, RelativeSource={RelativeSource AncestorType=local:ChangeableContainer}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>

            <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <DockPanel>
                    <local:ChangeableControlButtons DataContext="{Binding ., RelativeSource={RelativeSource Mode=TemplatedParent}}" DockPanel.Dock="Right" />

                    <ContentPresenter
                        x:Name="PART_Content"
                        Margin="4,0"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{Binding Binding, RelativeSource={RelativeSource AncestorType=local:ChangeableContainer}}"
                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                </DockPanel>
            </DockPanel>
        </DockPanel>
    </ControlTemplate>




    <Style TargetType="local:ChangeableContainer">
        <!--<Setter Property="Entity" Value="{Binding DataContext, RelativeSource={RelativeSource Mode=Self}}" />-->
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBox Text="{Binding NewValue, UpdateSourceTrigger=PropertyChanged, Delay=300}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditTemplate" Value="{StaticResource Tpl.Changeable.Default}" />
        <Setter Property="Template" Value="{Binding RelativeSource={RelativeSource Self}, Path=EditTemplate, TargetNullValue={StaticResource Tpl.Changeable.Default}}" />
        <Style.Triggers>
            <!--<Trigger Property="EditTemplate" Value="{x:Null}">
                <Setter Property="Template" Value="{StaticResource Tpl.Changeable.Default}" />
            </Trigger>-->
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:ChangeableContainer">
                            <DockPanel
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="Transparent"
                                LastChildFill="True">

                                <TextBlock
                                    VerticalAlignment="Center"
                                    DockPanel.Dock="Left"
                                    Foreground="{StaticResource LabelBrush}"
                                    Text="{Binding Binding.Label, RelativeSource={RelativeSource Mode=TemplatedParent}}" />


                                <local:CopyableControl Margin="10,0,0,0">
                                    <TextBlock Text="{Binding Binding.Display, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextWrapping="WrapWithOverflow" />
                                </local:CopyableControl>

                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

    </Style>




    <ControlTemplate x:Key="Tpl.ChangeableControl" TargetType="local:ChangeableControl">
        <DockPanel
            Margin="{TemplateBinding Margin}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            Background="Transparent"
            LastChildFill="True">

            <Grid>
                <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" />

                <TextBlock
                    Margin="0,-4,0,0"
                    HorizontalAlignment="Right"
                    FontSize="6"
                    Foreground="Purple"
                    Text="▼"
                    Visibility="{Binding Binding.IsInherited, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>

            <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <DockPanel>
                    <local:ChangeableControlButtons
                        DataContext="{Binding ., RelativeSource={RelativeSource TemplatedParent}}"
                        DockPanel.Dock="Right"
                        Visibility="{TemplateBinding IsReadOnly,
                                                     Converter={StaticResource BooleanToVisibilityReverseConverter}}" />

                    <ContentPresenter
                        x:Name="PART_Content"
                        Margin="4,1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Binding}"
                        ContentTemplate="{TemplateBinding EditTemplate}" />
                </DockPanel>
            </DockPanel>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="PART_Content" Property="ContentTemplate" Value="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="False">
                <Setter TargetName="PART_Content" Property="ContentTemplate" Value="{Binding EditTemplate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Tpl.ChangeableControl.Complex" TargetType="local:ChangeableControl">
        <StackPanel
            Margin="{TemplateBinding Margin}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            Background="Transparent">
            <DockPanel LastChildFill="False">
                <Grid>
                    <TextBlock
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        Foreground="{DynamicResource LabelBrush}"
                        Text="{Binding Binding.Label, RelativeSource={RelativeSource TemplatedParent}}" />

                    <TextBlock
                        Margin="0,-4,0,0"
                        HorizontalAlignment="Right"
                        FontSize="6"
                        Foreground="Purple"
                        Text="▼"
                        Visibility="{Binding Binding.IsInherited, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>

                <local:ChangeableControlButtons DataContext="{Binding ., RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Right" />

            </DockPanel>


            <ContentPresenter
                x:Name="PART_Content"
                Margin="4,1"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}"
                ContentTemplate="{TemplateBinding EditTemplate}" />

        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="PART_Content" Property="ContentTemplate" Value="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="False">
                <Setter TargetName="PART_Content" Property="ContentTemplate" Value="{Binding EditTemplate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="local:ChangeableControl">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        Foreground="{DynamicResource LabelBrush}"
                        Text="{Binding .}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Header" Value="{Binding Binding.Label, RelativeSource={RelativeSource Self}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <local:CopyableTextBlock Text="{Binding Display}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBox Text="{Binding NewValue, UpdateSourceTrigger=PropertyChanged, Delay=300}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource Tpl.ChangeableControl}" />
    </Style>








    <Style TargetType="{x:Type local:FileControl}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="AllowDrop" Value="{Binding IsReadOnly, Converter={StaticResource Boolean2BooleanReConverter}}" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel LastChildFill="False">
                        <TextBlock
                            Name="lb"
                            VerticalAlignment="Center"
                            Text="{Binding Binding.Label, RelativeSource={RelativeSource AncestorType=local:FileControl}}" />

                        <Viewbox
                            Width="14"
                            Height="14"
                            Margin="2,0,8,0"
                            VerticalAlignment="Center">
                            <Path
                                Data="{DynamicResource f.angle-right}"
                                Fill="Black"
                                Stroke="Black" />
                        </Viewbox>

                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FileControl}">
                    <Border HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                        <DockPanel Background="Transparent" LastChildFill="False">
                            <ContentPresenter VerticalAlignment="Center" ContentSource="Header" />

                            <hc:SimplePanel Visibility="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityReverseConverter}}">
                                <Button
                                    hc:IconElement.Geometry="{DynamicResource f.gear}"
                                    Command="{Binding ChooseFileCommand}"
                                    CommandParameter="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{DynamicResource ButtonIcon.Small}"
                                    ToolTip="设置文件"
                                    Visibility="{Binding Binding.Exists, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityReverseConverter}}" />
                            </hc:SimplePanel>

                            <hc:SimplePanel>
                                <local:AbbreviationText
                                    x:Name="file"
                                    VerticalContentAlignment="Center"
                                    Text="{Binding Binding.File.Name, RelativeSource={RelativeSource TemplatedParent}}" />

                                <hc:SimplePanel
                                    x:Name="p"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Stretch"
                                    Background="White"
                                    Visibility="Collapsed">
                                    <hc:SimplePanel.Resources>
                                        <Style BasedOn="{StaticResource ButtonIcon.Small}" TargetType="Button">
                                            <Setter Property="Margin" Value="2,-5" />
                                        </Style>
                                    </hc:SimplePanel.Resources>
                                    <DockPanel Margin="5,2" LastChildFill="False">
                                        <DockPanel DataContext="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}" LastChildFill="False">
                                            <Button
                                                hc:IconElement.Geometry="{DynamicResource f.book-open-reader}"
                                                Command="{Binding ViewCommand}"
                                                Foreground="Lime"
                                                ToolTip="查看" />

                                            <Button
                                                hc:IconElement.Geometry="{DynamicResource f.clone}"
                                                Command="{Binding CopyCommand}"
                                                Foreground="RoyalBlue"
                                                ToolTip="复制" />

                                            <Button
                                                hc:IconElement.Geometry="{DynamicResource f.file-export}"
                                                Command="{Binding SaveAsCommand}"
                                                ToolTip="另存为" />


                                        </DockPanel>
                                        <!--<Button
                                            hc:IconElement.Geometry="{DynamicResource f.repeat}"
                                            Command="{Binding SetFileCommand}"
                                            CommandParameter="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="更换"
                                            Visibility="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityReverseConverter}}" />-->
                                        <Button
                                            hc:IconElement.Geometry="{DynamicResource f.xmark}"
                                            Command="{Binding ClearCommand}"
                                            CommandParameter="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}"
                                            Foreground="Red"
                                            ToolTip="删除"
                                            Visibility="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityReverseConverter}}" />
                                    </DockPanel>
                                </hc:SimplePanel>

                            </hc:SimplePanel>
                            <TextBlock
                                Margin="6,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="8"
                                Foreground="Red"
                                Text="文件已被删除"
                                Visibility="{Binding Binding.Deleted, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />

                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Binding.Exists, TargetNullValue=False, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="p" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding Binding.Deleted, TargetNullValue=False, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="file" Property="Foreground" Value="Gray" />
                        </DataTrigger>

                        <!--<DataTrigger Binding="{Binding Binding.Exists, TargetNullValue=False, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="lb" Property="Foreground" Value="Green" />
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate x:Key="DT.MultiFile">

        <DockPanel Background="Transparent" LastChildFill="False">
            <TextBlock
                x:Name="lb"
                VerticalAlignment="Center"
                Text="{Binding DisplayName}" />

            <TextBlock
                Margin="5,0"
                VerticalAlignment="Center"
                FontSize="8"
                Foreground="Red"
                Text="文件已被删除"
                Visibility="{Binding Deleted, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <DockPanel
                x:Name="btns"
                Margin="5,0,0,0"
                Visibility="Collapsed">
                <DockPanel LastChildFill="False">
                    <Button
                        Margin="-5"
                        hc:IconElement.Geometry="{DynamicResource f.book-open-reader}"
                        Command="{Binding ViewCommand}"
                        Foreground="Lime"
                        Style="{DynamicResource ButtonIcon.Small}"
                        ToolTip="查看" />
                    <Button
                        Margin="-5"
                        hc:IconElement.Geometry="{DynamicResource f.file-export}"
                        Command="{Binding SaveAsCommand}"
                        Style="{DynamicResource ButtonIcon.Small}"
                        ToolTip="另存为" />

                    <Button
                        Margin="-5"
                        hc:IconElement.Geometry="{DynamicResource f.print}"
                        Command="{Binding PrintCommand}"
                        Style="{DynamicResource ButtonIcon.Small}"
                        ToolTip="打印" />
                </DockPanel>

                <Button
                    Margin="-5"
                    hc:IconElement.Geometry="{DynamicResource f.xmark}"
                    Command="{Binding DataContext.DeleteFileCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                    CommandParameter="{Binding .}"
                    Foreground="Red"
                    Style="{DynamicResource ButtonIcon.Small}"
                    ToolTip="删除"
                    Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=ListBox}, Converter={StaticResource BooleanToVisibilityReverseConverter}}" />
            </DockPanel>
        </DockPanel>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Exists, TargetNullValue=False}" Value="True" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="btns" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>


    <Style TargetType="local:MultiFileControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MultiFileControl">
                    <Border>
                        <DockPanel Background="Transparent">
                            <TextBlock
                                x:Name="lb"
                                VerticalAlignment="Center"
                                Text="{Binding Binding.Label, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Grid>
                                <Viewbox
                                    x:Name="arrow"
                                    Width="14"
                                    Height="14"
                                    Margin="2,0,8,0"
                                    VerticalAlignment="Center">
                                    <Path
                                        Data="{DynamicResource f.angle-right}"
                                        Fill="Black"
                                        Stroke="Black" />
                                </Viewbox>

                                <Button
                                    x:Name="add"
                                    hc:IconElement.Geometry="{DynamicResource f.gear}"
                                    Command="{Binding AddFileCommand}"
                                    CommandParameter="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{DynamicResource ButtonIcon.Small}"
                                    ToolTip="设置文件"
                                    Visibility="Collapsed" />

                            </Grid>


                            <ListBox
                                Background="Transparent"
                                BorderThickness="0"
                                ItemTemplate="{StaticResource DT.MultiFile}"
                                ItemsSource="{Binding Binding.Files, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource ListBoxCustom}" />




                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="add" Property="Visibility" Value="Visible" />
                            <Setter TargetName="arrow" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style TargetType="{x:Type local:CopyableTextBlock}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CopyableTextBlock}">
                    <Border
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="24" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                VerticalAlignment="Center"
                                Text="{TemplateBinding MaskedText}"
                                TextWrapping="WrapWithOverflow" />
                            <Button
                                x:Name="PART_Copy"
                                Grid.Column="1"
                                Padding="2,0"
                                hc:IconElement.Geometry="{DynamicResource f.copy}"
                                Content="复制"
                                DockPanel.Dock="Right"
                                FontSize="12"
                                Foreground="{DynamicResource PrimaryBrush}"
                                Style="{DynamicResource ButtonIcon.Small}"
                                Visibility="Hidden" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="CanCopy" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Copy" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItem.Calender" TargetType="ListBoxItem">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBox.Calender" TargetType="ListBox">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItem.Calender}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer>
                        <ItemsPresenter />
                    </ScrollViewer>
                    <ControlTemplate.Triggers />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>


    <Style TargetType="{x:Type local:SimpleCalender}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SimpleCalender}">
                    <Border
                        Margin="{TemplateBinding Margin}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <TextBlock
                                HorizontalAlignment="Center"
                                DockPanel.Dock="Top"
                                FontSize="18"
                                Text="{Binding Month, StringFormat={}{0}月}" />
                            <ListBox
                                x:Name="PART_Header"
                                Margin="0,4"
                                BorderThickness="0"
                                DockPanel.Dock="Top"
                                Style="{StaticResource ListBox.Calender}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="7" IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Center" Text="{Binding .}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <ListBox
                                BorderThickness="0"
                                ItemsSource="{TemplateBinding ItemsSource}"
                                Style="{StaticResource ListBox.Calender}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="7" IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Ellipse
                                                x:Name="bk"
                                                Width="24"
                                                Height="24"
                                                VerticalAlignment="Center" />
                                            <TextBlock
                                                x:Name="txt"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Text="{Binding Date.Day}" />
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsWeekEnd}" Value="True">
                                                <Setter TargetName="bk" Property="Fill" Value="LightGray" />
                                                <Setter TargetName="txt" Property="Foreground" Value="White" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsHoliday}" Value="True">
                                                <Setter TargetName="bk" Property="Fill" Value="LightGray" />
                                                <Setter TargetName="txt" Property="Foreground" Value="White" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsOpen}" Value="True">
                                                <Setter TargetName="bk" Property="Fill" Value="RoyalBlue" />
                                                <Setter TargetName="txt" Property="Foreground" Value="White" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:YearCalender}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:YearCalender}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ListBox
                            x:Name="PART_Calenders"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            Style="{StaticResource ListBoxCustom}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <local:SimpleCalender Margin="4" ItemsSource="{Binding Items}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
