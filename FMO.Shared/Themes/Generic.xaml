<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:FMO.Shared">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <local:BooleanToVisibilityReverseConverter x:Key="BooleanToVisibilityReverseConverter" />

    <SolidColorBrush x:Key="LabelBrush">Gray</SolidColorBrush>

    <ControlTemplate x:Key="Tpl.Changeable.Default" TargetType="local:ChangeableContainer">
        <DockPanel
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            Background="Transparent"
            LastChildFill="True">

            <Grid>
                <TextBlock
                    VerticalAlignment="Center"
                    DockPanel.Dock="Left"
                    Foreground="{DynamicResource LabelBrush}"
                    Text="{Binding Binding.Label, RelativeSource={RelativeSource AncestorType=local:ChangeableContainer}}" />

                <TextBlock
                    Margin="0,-4,0,0"
                    HorizontalAlignment="Right"
                    FontSize="6"
                    Foreground="Purple"
                    Text="▼"
                    Visibility="{Binding Binding.IsInherited, RelativeSource={RelativeSource AncestorType=local:ChangeableContainer}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>

            <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <DockPanel>
                    <local:ChangeableControlButtons DataContext="{Binding ., RelativeSource={RelativeSource Mode=TemplatedParent}}" DockPanel.Dock="Right" />

                    <ContentPresenter
                        x:Name="PART_Content"
                        Margin="4,0"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{Binding Binding, RelativeSource={RelativeSource AncestorType=local:ChangeableContainer}}"
                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                </DockPanel>
            </DockPanel>
        </DockPanel>
    </ControlTemplate>




    <Style TargetType="local:ChangeableContainer">
        <!--<Setter Property="Entity" Value="{Binding DataContext, RelativeSource={RelativeSource Mode=Self}}" />-->
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBox Text="{Binding NewValue, UpdateSourceTrigger=PropertyChanged, Delay=300}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditTemplate" Value="{StaticResource Tpl.Changeable.Default}" />
        <Setter Property="Template" Value="{Binding RelativeSource={RelativeSource Self}, Path=EditTemplate, TargetNullValue={StaticResource Tpl.Changeable.Default}}" />
        <Style.Triggers>
            <!--<Trigger Property="EditTemplate" Value="{x:Null}">
                <Setter Property="Template" Value="{StaticResource Tpl.Changeable.Default}" />
            </Trigger>-->
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:ChangeableContainer">
                            <DockPanel
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="Transparent"
                                LastChildFill="True">

                                <TextBlock
                                    VerticalAlignment="Center"
                                    DockPanel.Dock="Left"
                                    Foreground="{StaticResource LabelBrush}"
                                    Text="{Binding Binding.Label, RelativeSource={RelativeSource Mode=TemplatedParent}}" />


                                <local:CopyableControl Margin="10,0,0,0">
                                    <TextBlock Text="{Binding Binding.Display, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextWrapping="WrapWithOverflow" />
                                </local:CopyableControl>

                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type local:FileControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FileControl}">
                    <Border>
                        <DockPanel Background="Transparent">
                            <TextBlock
                                x:Name="lb"
                                VerticalAlignment="Center"
                                Text="{Binding Binding.Label, RelativeSource={RelativeSource TemplatedParent}}" />

                            <Viewbox
                                Width="14"
                                Height="14"
                                Margin="2,0,8,0"
                                VerticalAlignment="Center">
                                <Path
                                    Data="{DynamicResource f.angle-right}"
                                    Fill="Black"
                                    Stroke="Black" />
                            </Viewbox>

                            <TextBlock
                                MaxWidth="240"
                                Margin="5,2"
                                Padding="0"
                                Text="{Binding Binding.DisplayName, RelativeSource={RelativeSource TemplatedParent}}" />

                            <Grid Visibility="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityReverseConverter}}">
                                <Button
                                    hc:IconElement.Geometry="{DynamicResource f.gear}"
                                    Command="{Binding SetFileCommand}"
                                    CommandParameter="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{DynamicResource ButtonIcon.Small}"
                                    ToolTip="设置文件"
                                    Visibility="{Binding Binding.Exists, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityReverseConverter}}" />
                            </Grid>

                            <Grid
                                x:Name="p"
                                VerticalAlignment="Center"
                                Visibility="Collapsed">
                                <DockPanel LastChildFill="False">
                                    <DockPanel DataContext="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}" LastChildFill="False">
                                        <Button
                                            Margin="-5"
                                            hc:IconElement.Geometry="{DynamicResource f.book-open-reader}"
                                            Command="{Binding ViewCommand}"
                                            Foreground="Lime"
                                            Style="{DynamicResource ButtonIcon.Small}"
                                            ToolTip="查看" />
                                        <Button
                                            Margin="-5"
                                            hc:IconElement.Geometry="{DynamicResource f.file-export}"
                                            Command="{Binding SaveAsCommand}"
                                            Style="{DynamicResource ButtonIcon.Small}"
                                            ToolTip="另存为" />

                                        <Button
                                            Margin="-5"
                                            hc:IconElement.Geometry="{DynamicResource f.print}"
                                            Command="{Binding PrintCommand}"
                                            Style="{DynamicResource ButtonIcon.Small}"
                                            ToolTip="打印" />
                                    </DockPanel>
                                    <Button
                                        Margin="-5"
                                        hc:IconElement.Geometry="{DynamicResource f.repeat}"
                                        Command="{Binding SetFileCommand}"
                                        CommandParameter="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{DynamicResource ButtonIcon.Small}"
                                        ToolTip="更换"
                                        Visibility="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <Button
                                        Margin="-5"
                                        hc:IconElement.Geometry="{DynamicResource f.xmark}"
                                        Command="{Binding DeleteFileCommand}"
                                        CommandParameter="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}"
                                        Foreground="Red"
                                        Style="{DynamicResource ButtonIcon.Small}"
                                        ToolTip="删除"
                                        Visibility="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityReverseConverter}}" />
                                </DockPanel>
                            </Grid>

                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Binding.Exists, TargetNullValue=False, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="p" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Binding.Exists, TargetNullValue=False, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="lb" Property="Foreground" Value="Green" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate x:Key="DT.MultiFile">

        <DockPanel Background="Transparent" LastChildFill="False">
            <TextBlock
                x:Name="lb"
                VerticalAlignment="Center"
                Text="{Binding DisplayName}" />


            <DockPanel x:Name="btns" Visibility="Collapsed">
                <DockPanel LastChildFill="False">
                    <Button
                        Margin="-5"
                        hc:IconElement.Geometry="{DynamicResource f.book-open-reader}"
                        Command="{Binding ViewCommand}"
                        Foreground="Lime"
                        Style="{DynamicResource ButtonIcon.Small}"
                        ToolTip="查看" />
                    <Button
                        Margin="-5"
                        hc:IconElement.Geometry="{DynamicResource f.file-export}"
                        Command="{Binding SaveAsCommand}"
                        Style="{DynamicResource ButtonIcon.Small}"
                        ToolTip="另存为" />

                    <Button
                        Margin="-5"
                        hc:IconElement.Geometry="{DynamicResource f.print}"
                        Command="{Binding PrintCommand}"
                        Style="{DynamicResource ButtonIcon.Small}"
                        ToolTip="打印" />
                </DockPanel>

                <Button
                    Margin="-5"
                    hc:IconElement.Geometry="{DynamicResource f.xmark}"
                    Command="{Binding DataContext.DeleteFileCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                    CommandParameter="{Binding .}"
                    Foreground="Red"
                    Style="{DynamicResource ButtonIcon.Small}"
                    ToolTip="删除"
                    Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=ListBox}, Converter={StaticResource BooleanToVisibilityReverseConverter}}" />
            </DockPanel>
        </DockPanel>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="btns" Property="Visibility" Value="Visible" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <Style TargetType="local:MultiFileControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MultiFileControl">
                    <Border>
                        <DockPanel Background="Transparent">
                            <TextBlock
                                x:Name="lb"
                                VerticalAlignment="Center"
                                Text="{Binding Binding.Label, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Grid>
                                <Viewbox
                                    x:Name="arrow"
                                    Width="14"
                                    Height="14"
                                    Margin="2,0,8,0"
                                    VerticalAlignment="Center">
                                    <Path
                                        Data="{DynamicResource f.angle-right}"
                                        Fill="Black"
                                        Stroke="Black" />
                                </Viewbox>

                                <Button
                                    x:Name="add"
                                    hc:IconElement.Geometry="{DynamicResource f.gear}"
                                    Command="{Binding AddFileCommand}"
                                    CommandParameter="{Binding Binding, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{DynamicResource ButtonIcon.Small}"
                                    ToolTip="设置文件"
                                    Visibility="Collapsed" />

                            </Grid>


                            <ListBox
                                Background="Transparent"
                                BorderThickness="0"
                                ItemTemplate="{StaticResource DT.MultiFile}"
                                ItemsSource="{Binding Binding.Files, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource ListBoxCustom}" />




                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsReadOnly" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="add" Property="Visibility" Value="Visible" />
                            <Setter TargetName="arrow" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




</ResourceDictionary>
