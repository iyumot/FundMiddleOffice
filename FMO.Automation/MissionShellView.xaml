<UserControl
    x:Class="FMO.Schedule.MissionShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:FMO.Schedule"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContextChanged="UserControl_DataContextChanged"
    mc:Ignorable="d">
    <UserControl.Resources>



        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:BooleanToBrushConverter x:Key="BooleanToBrushConverter" />

        <sys:Boolean x:Key="Bool.True">True</sys:Boolean>
        <sys:Boolean x:Key="Bool.False">False</sys:Boolean>

        <sys:Double x:Key="TaskButtonSize">14</sys:Double>
        <sys:Double x:Key="TaskButtonSize2">18</sys:Double>


        <ControlTemplate x:Key="TaskRunTime" TargetType="ContentControl">
            <Grid>
                <Viewbox Width="{StaticResource TaskButtonSize}" Height="{StaticResource TaskButtonSize}">
                    <Path
                        x:Name="lb"
                        Data="{StaticResource f.angle-right}"
                        Fill="White" />
                </Viewbox>

                <Grid
                    VerticalAlignment="Center"
                    Background="{TemplateBinding Background}"
                    Visibility="{Binding IsActivated, Converter={StaticResource Boolean2VisibilityConverter}}">
                    <ToggleButton
                        x:Name="toggle"
                        Width="{StaticResource TaskButtonSize}"
                        Height="{StaticResource TaskButtonSize}"
                        Padding="0"
                        VerticalContentAlignment="Center"
                        hc:IconElement.Geometry="{StaticResource f.pen}"
                        Background="Transparent"
                        BorderThickness="0"
                        IsChecked="{Binding ManualSetNextRun}"
                        Style="{StaticResource ToggleButtonIcon}"
                        Visibility="Collapsed" />
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="toggle" Property="Visibility" Value="Visible" />
                </Trigger>
                <DataTrigger Binding="{Binding ManualSetNextRun}" Value="True">

                    <Setter TargetName="lb" Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <UserControl.Template>
        <ControlTemplate TargetType="UserControl">
            <DockPanel Margin="0,8" Background="Transparent">
                <Border x:Name="borderHead" DockPanel.Dock="Top">
                    <DockPanel>
                        <Border MinWidth="100" Background="RoyalBlue">
                            <TextBlock
                                Margin="8,6"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Text="{Binding Title}"
                                TextAlignment="Center" />
                        </Border>
                        <ToggleButton
                            Margin="0"
                            Padding="0,-4,0,0"
                            VerticalContentAlignment="Center"
                            Background="Transparent"
                            BorderThickness="0"
                            IsChecked="{Binding IsActivated}"
                            IsEnabled="{Binding IsAvailable}"
                            Style="{StaticResource ToggleButtonFlip}">
                            <hc:StatusSwitchElement.CheckedElement>
                                <Viewbox Width="20" Height="20">
                                    <Path Data="{StaticResource f.play}" Fill="Green" />
                                </Viewbox>
                            </hc:StatusSwitchElement.CheckedElement>
                            <Viewbox Width="20" Height="20">
                                <Path Data="{StaticResource f.pause}" Fill="Red" />
                            </Viewbox>
                        </ToggleButton>

                        <hc:SimplePanel Visibility="{Binding IsActivated, Converter={StaticResource Boolean2VisibilityReConverter}}">
                            <Button
                                Name="del"
                                hc:IconElement.Geometry="{StaticResource f.trash}"
                                Command="{Binding DeleteMissionCommand}"
                                CommandParameter="{Binding .}"
                                IsEnabled="{Binding IsWorking, Converter={StaticResource Boolean2BooleanReConverter}}"
                                Style="{StaticResource ButtonIcon}"
                                Visibility="Collapsed" />
                        </hc:SimplePanel>
                        <Button
                            x:Name="runonce"
                            Height="24"
                            Margin="10,0"
                            hc:IconElement.Geometry="{StaticResource f.check-double}"
                            Background="AliceBlue"
                            BorderThickness="0"
                            Command="{Binding RunOnceCommand}"
                            Content="运行一次"
                            IsEnabled="{Binding IsAvailable}"
                            Visibility="Collapsed" />

                        <ToggleButton
                            Name="info"
                            Padding="5"
                            hc:IconElement.Geometry="{StaticResource f.circle-info}"
                            Background="Transparent"
                            BorderThickness="0"
                            DockPanel.Dock="Right"
                            IsChecked="{Binding IsLogVisible}"
                            Style="{StaticResource ToggleButtonIcon}" />

                        <Border
                            Name="id"
                            VerticalAlignment="Center"
                            Background="Gray"
                            CornerRadius="10"
                            DockPanel.Dock="Right"
                            Visibility="Collapsed">
                            <TextBlock
                                Margin="6,2"
                                Foreground="White"
                                Text="{Binding Id}" />
                        </Border>

                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            d:Text=" "
                            Text="{Binding Description}" />

                        <Popup
                            IsOpen="{Binding IsLogVisible}"
                            Placement="Left"
                            PlacementTarget="{Binding ElementName=info}"
                            StaysOpen="False">
                            <Border
                                Width="500"
                                Height="300"
                                Background="WhiteSmoke">
                                <TextBlock
                                    Margin="10"
                                    Foreground="Gray"
                                    Text="{Binding WorkLog}"
                                    TextWrapping="Wrap" />
                            </Border>
                        </Popup>
                    </DockPanel>
                </Border>

                <Border
                    x:Name="borderTime"
                    Width="100"
                    Background="LightGray"
                    IsEnabled="{Binding IsActivated}"
                    TextElement.Foreground="#666666">
                    <Border.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                        <Style
                            x:Key="Style.Calendar"
                            BasedOn="{StaticResource CalendarBaseStyle}"
                            TargetType="Calendar">
                            <Setter Property="Background" Value="Gray" />
                        </Style>
                    </Border.Resources>
                    <StackPanel Margin="4,0" VerticalAlignment="Center">
                        <DockPanel Margin="0,2">
                            <Viewbox Width="{StaticResource TaskButtonSize}" Height="{StaticResource TaskButtonSize}">
                                <Path Data="{StaticResource f.clock-rotate-left}" Fill="White" />
                            </Viewbox>
                            <TextBlock DockPanel.Dock="Top" Text="{Binding LastRunTime, StringFormat=yyyy-M-d}" />
                            <TextBlock Text="{Binding LastRunTime, StringFormat=HH:mm}" />
                        </DockPanel>


                        <DockPanel>
                            <Grid>
                                <Grid x:Name="ng">
                                    <ContentControl Background="{Binding Background, RelativeSource={RelativeSource AncestorType=Border}}" Template="{StaticResource TaskRunTime}" />

                                    <UniformGrid x:Name="btn" Columns="1">
                                        <Button
                                            Width="{StaticResource TaskButtonSize2}"
                                            Height="{StaticResource TaskButtonSize2}"
                                            Padding="0"
                                            hc:IconElement.Geometry="{DynamicResource f.circle-check}"
                                            Command="{Binding DoManualSetNextRunTimeCommand}"
                                            CommandParameter="{StaticResource Bool.True}"
                                            Style="{StaticResource ButtonIcon}"
                                            Visibility="{Binding ManualSetNextRun, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        <Button
                                            Width="{StaticResource TaskButtonSize2}"
                                            Height="{StaticResource TaskButtonSize2}"
                                            Padding="0"
                                            hc:IconElement.Geometry="{DynamicResource f.ban}"
                                            Command="{Binding DoManualSetNextRunTimeCommand}"
                                            CommandParameter="{StaticResource Bool.False}"
                                            Style="{StaticResource ButtonIcon}"
                                            Visibility="{Binding ManualSetNextRun, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </UniformGrid>
                                </Grid>
                            </Grid>
                            <Grid>
                                <UniformGrid
                                    Margin="5,0,0,0"
                                    Columns="1"
                                    Visibility="{Binding ManualSetNextRun, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <DatePicker CalendarStyle="{StaticResource Style.Calendar}" SelectedDate="{Binding NextRunDate}" />
                                    <hc:TimePicker HorizontalContentAlignment="Center" SelectedTime="{Binding NextRunTime}" />
                                </UniformGrid>
                                <UniformGrid
                                    HorizontalAlignment="Center"
                                    Columns="1"
                                    Visibility="{Binding ManualSetNextRun, Converter={StaticResource Boolean2VisibilityReConverter}}">
                                    <TextBlock DockPanel.Dock="Top" Text="{Binding NextRunDate, StringFormat=yyyy-M-d}" />
                                    <TextBlock HorizontalAlignment="Center" Text="{Binding NextRunTime, StringFormat=HH:mm}" />
                                </UniformGrid>
                            </Grid>
                        </DockPanel>
                    </StackPanel>
                </Border>

                <ContentPresenter
                    x:Name="content"
                    Margin="5,0"
                    Content="{TemplateBinding Content}"
                    IsEnabled="{Binding IsActivated, Converter={StaticResource Boolean2BooleanReConverter}}" />
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="runonce" Property="Visibility" Value="Visible" />
                    <Setter TargetName="del" Property="Visibility" Value="Visible" />
                    <Setter TargetName="id" Property="Visibility" Value="Visible" />
                </Trigger>
                <DataTrigger Binding="{Binding IsActivated}" Value="False">
                    <Setter TargetName="content" Property="Opacity" Value="0.8" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsActivated}" Value="True">
                    <Setter TargetName="borderTime" Property="Background" Value="Green" />
                    <Setter TargetName="borderTime" Property="TextElement.Foreground" Value="White" />
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True" />
                <DataTrigger Binding="{Binding ManualSetNextRun}" Value="True">
                    <Setter TargetName="btn" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Template>
</UserControl>
