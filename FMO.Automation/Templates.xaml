<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:FMO.Schedule"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <local:BooleanToBrushConverter x:Key="BooleanToBrushConverter" />

    <sys:Boolean x:Key="Bool.True">True</sys:Boolean>
    <sys:Boolean x:Key="Bool.False">False</sys:Boolean>

    <sys:Double x:Key="TaskButtonSize">14</sys:Double>
    <sys:Double x:Key="TaskButtonSize2">18</sys:Double>

    <Style x:Key="ToggleInMission" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Rectangle
                            Name="Track"
                            Width="40"
                            Height="15"
                            Margin="4.211,5,4.211,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Opacity="0.26"
                            RadiusX="7.5"
                            RadiusY="7.5"
                            Stroke="{x:Null}" />
                        <Grid
                            Name="ThumbHolder"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top">
                            <Ellipse
                                Name="RippleThumb"
                                Width="25"
                                Height="25"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{DynamicResource MaterialDesign.Brush.Primary.Light}"
                                IsHitTestVisible="False"
                                Opacity="0.26"
                                RenderTransformOrigin="0.5,0.5" />
                            <AdornerDecorator>
                                <Ellipse
                                    Name="Thumb"
                                    Width="25"
                                    Height="25"
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="#FFFAFAFA"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stroke="{x:Null}" />
                            </AdornerDecorator>
                            <ContentPresenter
                                Name="ContentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                FlowDirection="LeftToRight" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="TaskRunTime" TargetType="ContentControl">
        <Grid>
            <Viewbox Width="{StaticResource TaskButtonSize}" Height="{StaticResource TaskButtonSize}">
                <Path
                    x:Name="lb"
                    Data="{StaticResource f.angle-right}"
                    Fill="Black" />
            </Viewbox>

            <Grid
                VerticalAlignment="Center"
                Background="{TemplateBinding Background}"
                Visibility="{Binding IsActivated, Converter={StaticResource Boolean2VisibilityConverter}}">
                <ToggleButton
                    x:Name="toggle"
                    Width="{StaticResource TaskButtonSize}"
                    Height="{StaticResource TaskButtonSize}"
                    Padding="0"
                    VerticalContentAlignment="Center"
                    hc:IconElement.Geometry="{StaticResource f.pen}"
                    Background="Transparent"
                    BorderThickness="0"
                    IsChecked="{Binding ManualSetNextRun}"
                    Style="{StaticResource ToggleButtonIcon}"
                    Visibility="Collapsed" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="toggle" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding ManualSetNextRun}" Value="True">

                <Setter TargetName="lb" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="AutomationViewTemplate" TargetType="ContentControl">
        <DockPanel Margin="0,8">
            <Border x:Name="borderHead" DockPanel.Dock="Top">
                <DockPanel>
                    <Border MinWidth="100" Background="Blue">
                        <TextBlock
                            Margin="8,6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="White"
                            Text="{Binding Title}"
                            TextAlignment="Center" />
                    </Border>
                    <ToggleButton
                        Margin="0"
                        Padding="0"
                        Background="Transparent"
                        BorderThickness="0"
                        IsChecked="{Binding IsActivated}"
                        Style="{StaticResource ToggleButtonFlip}">
                        <hc:StatusSwitchElement.CheckedElement>
                            <Viewbox
                                Width="20"
                                Height="20"
                                VerticalAlignment="Center">
                                <Path Data="{StaticResource f.play}" Fill="Green" />
                            </Viewbox>
                        </hc:StatusSwitchElement.CheckedElement>
                        <Viewbox
                            Width="20"
                            Height="20"
                            VerticalAlignment="Center">
                            <Path Data="{StaticResource f.pause}" Fill="Red" />
                        </Viewbox>
                    </ToggleButton>
                    <TextBlock />
                </DockPanel>
            </Border>

            <Border
                x:Name="borderTime"
                Width="100"
                Background="Red"
                IsEnabled="{Binding IsActivated}">
                <Border.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                    </Style>
                    <Style
                        x:Key="Style.Calendar"
                        BasedOn="{StaticResource CalendarBaseStyle}"
                        TargetType="Calendar">
                        <Setter Property="Background" Value="Gray" />
                    </Style>
                </Border.Resources>
                <StackPanel
                    Margin="4,0"
                    VerticalAlignment="Center"
                    TextElement.Foreground="White">
                    <DockPanel Margin="0,2">
                        <Viewbox Width="{StaticResource TaskButtonSize}" Height="{StaticResource TaskButtonSize}">
                            <Path Data="{StaticResource f.clock-rotate-left}" Fill="Black" />
                        </Viewbox>
                        <TextBlock DockPanel.Dock="Top" Text="{Binding LastRunTime, StringFormat=yyyy-M-d}" />
                        <TextBlock Text="{Binding LastRunTime, StringFormat=HH:mm}" />
                    </DockPanel>


                    <DockPanel>
                        <Grid>
                            <Grid x:Name="ng">
                                <ContentControl Background="{Binding Background, RelativeSource={RelativeSource AncestorType=Border}}" Template="{StaticResource TaskRunTime}" />

                                <UniformGrid x:Name="btn" Columns="1">
                                    <Button
                                        Width="{StaticResource TaskButtonSize2}"
                                        Height="{StaticResource TaskButtonSize2}"
                                        Padding="0"
                                        hc:IconElement.Geometry="{DynamicResource f.circle-check}"
                                        Command="{Binding DoManualSetNextRunTimeCommand}"
                                        CommandParameter="{StaticResource Bool.True}"
                                        Style="{StaticResource ButtonIcon}"
                                        Visibility="{Binding ManualSetNextRun, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <Button
                                        Width="{StaticResource TaskButtonSize2}"
                                        Height="{StaticResource TaskButtonSize2}"
                                        Padding="0"
                                        hc:IconElement.Geometry="{DynamicResource f.ban}"
                                        Command="{Binding DoManualSetNextRunTimeCommand}"
                                        CommandParameter="{StaticResource Bool.False}"
                                        Style="{StaticResource ButtonIcon}"
                                        Visibility="{Binding ManualSetNextRun, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </UniformGrid>
                            </Grid>
                        </Grid>
                        <Grid>
                            <UniformGrid
                                Margin="5,0,0,0"
                                Columns="1"
                                Visibility="{Binding ManualSetNextRun, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <DatePicker CalendarStyle="{StaticResource Style.Calendar}" SelectedDate="{Binding NextRunDate}" />
                                <hc:TimePicker HorizontalContentAlignment="Center" SelectedTime="{Binding NextRunTime}" />
                            </UniformGrid>
                            <UniformGrid
                                HorizontalAlignment="Center"
                                Columns="1"
                                Visibility="{Binding ManualSetNextRun, Converter={StaticResource Boolean2VisibilityReConverter}}">
                                <TextBlock DockPanel.Dock="Top" Text="{Binding NextRunDate, StringFormat=yyyy-M-d}" />
                                <TextBlock HorizontalAlignment="Center" Text="{Binding NextRunTime, StringFormat=HH:mm}" />
                            </UniformGrid>
                        </Grid>
                    </DockPanel>
                </StackPanel>
            </Border>

            <ContentPresenter
                x:Name="content"
                Margin="5,0"
                Content="{TemplateBinding Content}" />
        </DockPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsActivated}" Value="False">
                <Setter TargetName="content" Property="Opacity" Value="0.8" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsActivated}" Value="True">
                <Setter TargetName="borderTime" Property="Background" Value="Green" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True" />
            <DataTrigger Binding="{Binding ManualSetNextRun}" Value="True">
                <Setter TargetName="btn" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>






</ResourceDictionary>