<UserControl
    x:Class="FMO.QualificationView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:FMO"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:shared="clr-namespace:FMO.Shared;assembly=FMO.Shared"
    d:DataContext="{d:DesignInstance Type=local:QualificationViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Background="Transparent"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style BasedOn="{StaticResource {x:Type shared:ChangeableContainer}}" TargetType="shared:ChangeableContainer">
            <Setter Property="Entity" Value="{Binding RelativeSource={RelativeSource AncestorType=local:QualificationView}, Path=DataContext}" />
        </Style>


    </UserControl.Resources>
    <Grid>

        <StackPanel>
            <StackPanel.Resources>
                <Thickness
                    x:Key="marg"
                    Bottom="4"
                    Left="0"
                    Right="0"
                    Top="4" />
            </StackPanel.Resources>


            <DockPanel LastChildFill="False" Visibility="{Binding IsReadOnly, Converter={StaticResource Boolean2VisibilityReConverter}}">
                <TextBlock VerticalAlignment="Center" Text="日期" />


                <shared:ChangeableContainer Binding="{Binding Date}">
                    <shared:ChangeableContainer.ContentTemplate>
                        <DataTemplate>
                            <DatePicker MinWidth="100" SelectedDate="{Binding NewValue, Converter={StaticResource DataTimeDateOnlySwitchConverter}}" />
                        </DataTemplate>
                    </shared:ChangeableContainer.ContentTemplate>
                </shared:ChangeableContainer>


                <CheckBox
                    Margin="15,0"
                    Content="专业投资者"
                    IsChecked="{Binding IsProfessional}" />
                <!--<ContentControl DataContext="{Binding IsProfessional}" Style="{DynamicResource ElementContainer}">
                    <CheckBox
                        Margin="15,0"
                        Content="专业投资者"
                        IsChecked="{Binding Data.New}" />
                </ContentControl>-->

                <!--<UniformGrid Rows="1">
                    <RadioButton Content="普通投资者" IsChecked="{Binding IsProfessional, Converter={StaticResource Boolean2BooleanReConverter}}" />
                    <RadioButton Content="专业投资者" IsChecked="{Binding IsProfessional}" />
                </UniformGrid>-->
            </DockPanel>



            <shared:FileControl Binding="{Binding InfomationSheet}" IsReadOnly="{Binding IsReadOnly}" />

            <shared:FileControl Binding="{Binding CommitmentLetter}" IsReadOnly="{Binding IsReadOnly}" />




            <shared:FileControl Binding="{Binding Notice}" IsReadOnly="{Binding IsReadOnly}" />

            <Grid Visibility="{Binding ShowTax, Converter={StaticResource Boolean2VisibilityConverter}}">
                <shared:FileControl Binding="{Binding TaxDeclaration}" IsReadOnly="{Binding IsReadOnly}" />
            </Grid>

            <shared:MultiFileControl Binding="{Binding CertificationFiles}" IsReadOnly="{Binding IsReadOnly}" />


            <StackPanel Visibility="{Binding ShowAgent, Converter={StaticResource Boolean2VisibilityConverter}}">
                <shared:FileControl Binding="{Binding Authorization}" IsReadOnly="{Binding IsReadOnly}" />

                <shared:FileControl Binding="{Binding Agent}" IsReadOnly="{Binding IsReadOnly}" />
            </StackPanel>
            <Grid Visibility="{Binding NeedExperience, Converter={StaticResource Boolean2VisibilityConverter}}">

                <shared:FileControl
                    Binding="{Binding ProofOfExperience}"
                    IsReadOnly="{Binding IsReadOnly}"
                    Visibility="{Binding IsProfessional, Converter={StaticResource Boolean2VisibilityConverter}}" />
            </Grid>

            <DockPanel>
                <TextBlock Margin="{StaticResource marg}" Text="认定方式" />

                <ContentControl>
                    <ContentControl.Template>
                        <ControlTemplate TargetType="ContentControl">
                            <TextBlock
                                x:Name="tb"
                                Margin="20,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="Blue"
                                Text="{Binding Statement}"
                                Visibility="{Binding IsReadOnly, Converter={StaticResource Boolean2VisibilityConverter}}" />
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding HasError}" Value="True">
                                    <Setter TargetName="tb" Property="Foreground" Value="Red" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ContentControl.Template>
                </ContentControl>
            </DockPanel>

            <!--  认定方式  -->
            <StackPanel Visibility="{Binding IsReadOnly, Converter={StaticResource Boolean2VisibilityReConverter}}">
                <ListBox
                    Padding="-8,0"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    ItemsSource="{Binding ProofTypes}"
                    SelectedItem="{Binding ProofType}"
                    Style="{StaticResource ListBoxCustom}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel IsItemsHost="True" Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource ListBoxItemCustom}" TargetType="ListBoxItem">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Margin" Value="8,0" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding .}" Value="Financial">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <DockPanel Margin="{StaticResource marg}" DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:QualificationView}, Path=DataContext}">
                                                    <CheckBox Content="金融资产" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" />
                                                    <TextBox
                                                        Width="60"
                                                        Margin="4,0"
                                                        DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:QualificationView}, Path=DataContext}"
                                                        Text="{Binding FinancialAssets}" />
                                                    <TextBlock VerticalAlignment="Center" Text="万" />
                                                </DockPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding .}" Value="Income">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <DockPanel Margin="{StaticResource marg}">
                                                    <CheckBox Content="近三年年均收入" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" />
                                                    <TextBox Width="60" Margin="4,0" />
                                                    <TextBlock VerticalAlignment="Center" Text="万" />
                                                </DockPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding .}" Value="Employee">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <CheckBox
                                                    VerticalAlignment="Center"
                                                    Content="管理人员工"
                                                    IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>


                                <DataTrigger Binding="{Binding .}" Value="NetAssets">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <DockPanel Margin="{StaticResource marg}" DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:QualificationView}, Path=DataContext}">
                                                    <CheckBox Content="净资产" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" />
                                                    <TextBox
                                                        Width="60"
                                                        Margin="4,0"
                                                        IsEnabled="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                                                        Text="{Binding NetAssets}" />
                                                    <TextBlock VerticalAlignment="Center" Text="万" />

                                                    <DockPanel Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:QualificationView}, Path=DataContext.IsProfessional, Converter={StaticResource Boolean2VisibilityConverter}}">
                                                        <TextBlock
                                                            Margin="8,0,0,0"
                                                            VerticalAlignment="Center"
                                                            Text="金融资产" />
                                                        <TextBox
                                                            Width="60"
                                                            Margin="4,0"
                                                            Text="{Binding FinancialAssets}" />
                                                        <TextBlock VerticalAlignment="Center" Text="万" />
                                                    </DockPanel>
                                                </DockPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>


                                <DataTrigger Binding="{Binding .}" Value="FinancialInstitution">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <CheckBox
                                                    VerticalAlignment="Center"
                                                    Content="{Binding}"
                                                    IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding .}" Value="Product">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <CheckBox
                                                    VerticalAlignment="Center"
                                                    Content="{Binding}"
                                                    IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>


                <Separator />

                <Grid Visibility="{Binding NeedExperience, Converter={StaticResource Boolean2VisibilityConverter}}">
                    <ListBox
                        Background="Transparent"
                        BorderBrush="Transparent"
                        ItemsSource="{Binding ExperienceTypes}"
                        SelectedItem="{Binding ExperienceType}"
                        Style="{StaticResource ListBoxCustom}"
                        Visibility="{Binding IsProfessional, Converter={StaticResource Boolean2VisibilityConverter}}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox
                                    Margin="{StaticResource marg}"
                                    Content="{Binding .}"
                                    IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </StackPanel>


        </StackPanel>


        <!--  右上角按键  -->
        <DockPanel HorizontalAlignment="Right" VerticalAlignment="Top">
            <Button
                Margin="5,0"
                hc:IconElement.Geometry="{StaticResource f.floppy-disk}"
                Command="{Binding SaveQualificationCommand}"
                CommandParameter="{Binding .}"
                Style="{StaticResource ButtonIconCircular.Small}"
                Visibility="{Binding IsReadOnly, Converter={StaticResource Boolean2VisibilityReConverter}}" />

            <!--  删除合投  -->
            <Button
                Margin="5,0"
                hc:IconElement.Geometry="{StaticResource f.trash}"
                Command="{Binding DataContext.DeleteQualificationCommand, RelativeSource={RelativeSource AncestorType=local:CustomerView}}"
                CommandParameter="{Binding .}"
                Foreground="Red"
                Style="{StaticResource ButtonIconCircular.Small}"
                Visibility="{Binding IsReadOnly, Converter={StaticResource Boolean2VisibilityReConverter}}" />


            <Grid Margin="10,0" Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:QualificationView}, Path=IsMouseOver, Converter={StaticResource Boolean2VisibilityReConverter}}">
                <Ellipse MinWidth="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" Fill="Gold" />
                <TextBlock
                    Margin="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{Binding Id}" />
            </Grid>

            <!--  切换读写  -->
            <ToggleButton
                BorderBrush="Transparent"
                DockPanel.Dock="Right"
                IsChecked="{Binding IsReadOnly}"
                Style="{StaticResource ToggleButtonFlip}"
                Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:QualificationView}, Path=IsMouseOver, Converter={StaticResource Boolean2VisibilityConverter}}">
                <hc:StatusSwitchElement.CheckedElement>
                    <Viewbox Width="14" Height="14">
                        <Path Data="{StaticResource f.pen}" Fill="Green" />
                    </Viewbox>
                </hc:StatusSwitchElement.CheckedElement>
                <Viewbox Width="14" Height="14">
                    <Path Data="{StaticResource f.eye}" Fill="Black" />
                </Viewbox>
            </ToggleButton>
        </DockPanel>
    </Grid>

</UserControl>
