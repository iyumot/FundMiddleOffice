<UserControl
    x:Class="FMO.CustomerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:FMO"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:shared="clr-namespace:FMO.Shared;assembly=FMO.Shared"
    d:DataContext="{d:DesignInstance local:CustomerPageViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.DataContext>
        <local:CustomerPageViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>

        <Style
            x:Key="BaseText"
            BasedOn="{StaticResource TextBlockBaseStyle}"
            TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="shared:CopyableAttach.Copyable" Value="True" />
        </Style>

        <Style x:Key="ColorCell" TargetType="{x:Type DataGridCell}">
            <Style.Triggers>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=Foreground}" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="hc:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Background="Transparent">
                            <Border
                                Margin="0,0,4,0"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="True">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ColorRowStyle" TargetType="{x:Type DataGridRow}">
            <Style.Triggers>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Orange" />
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=Foreground}" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Trigger>
                <DataTrigger Binding="{Binding Type}" Value="Institution">
                    <Setter Property="Background" Value="WhiteSmoke" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="Product">
                    <Setter Property="Background" Value="#dedede" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="UIElement.SnapsToDevicePixels" Value="true" />
            <Setter Property="Margin" Value="0,2" />
            <Setter Property="Padding" Value="0,6" />
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Setter Property="DataGridRow.ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock
                            Margin="2,0,0,0"
                            VerticalAlignment="Center"
                            Foreground="Red"
                            Text="!" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <Border
                                Name="DGR_Border"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                SnapsToDevicePixels="True" />
                            <DataGridCellsPresenter
                                Grid.Row="0"
                                Grid.Column="1"
                                MinHeight="{TemplateBinding MinHeight}"
                                VerticalContentAlignment="Center"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter
                                Grid.Row="1"
                                Grid.Column="1"
                                Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="5,0,0,0"
                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                        </SelectiveScrollingGrid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="DataGridColumnHeaderStyle.NoSpace"
            BasedOn="{StaticResource DataGridColumnHeaderStyle}"
            TargetType="DataGridColumnHeader">
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <Style
            x:Key="DataGrid.ReadOnly"
            BasedOn="{StaticResource DataGridBaseStyle}"
            TargetType="{x:Type DataGrid}">
            <Setter Property="CanUserSortColumns" Value="False" />
            <Setter Property="hc:DataGridAttach.ApplyDefaultStyle" Value="False" />
            <Setter Property="DataGrid.CellStyle" Value="{StaticResource ColorCell}" />
            <Setter Property="DataGrid.RowStyle" Value="{StaticResource ColorRowStyle}" />
            <Setter Property="DataGrid.ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle.NoSpace}" />
            <Setter Property="DataGrid.RowHeight" Value="24" />
            <Setter Property="DataGrid.ColumnHeaderHeight" Value="20" />
            <Setter Property="hc:DataGridAttach.EditingTextColumnStyle" Value="{StaticResource DataGridEditingTextColumnStyle.Small}" />
            <Setter Property="hc:DataGridAttach.EditingComboBoxColumnStyle" Value="{StaticResource DataGridEditingComboBoxColumnStyle.Small}" />
        </Style>


    </UserControl.Resources>
    <DockPanel>
        <DockPanel Margin="0,5" DockPanel.Dock="Top">
            <hc:UniformSpacingPanel DockPanel.Dock="Right" Spacing="10">
                <Button
                    hc:IconElement.Geometry="{StaticResource f.plus}"
                    Command="{Binding AddInvestorCommand}"
                    CommandParameter="{Binding ElementName=datagrid}"
                    Content="新增投资人"
                    Style="{StaticResource ButtonDefault.Small}" />
                <Button
                    hc:IconElement.Geometry="{StaticResource f.circle-minus}"
                    Command="{Binding RemoveInvestorCommand}"
                    Content="删除投资人"
                    Foreground="Red"
                    Style="{StaticResource ButtonDefault.Small}" />

                <!--  搜索  -->
                <ContentControl Content="{Binding .}">
                    <ContentControl.ContentTemplate>
                        <DataTemplate>
                            <hc:SimplePanel Margin="10,0">
                                <TextBox
                                    MinWidth="200"
                                    Padding="4"
                                    HorizontalContentAlignment="Center"
                                    Style="{StaticResource TextBox.Small}"
                                    Text="{Binding SearchKey, UpdateSourceTrigger=PropertyChanged, Delay=300}" />
                                <Viewbox
                                    x:Name="a"
                                    Height="16"
                                    Margin="5,0"
                                    HorizontalAlignment="Right">
                                    <Path Data="{StaticResource f.magnifying-glass}" Fill="Black" />
                                </Viewbox>
                                <Button
                                    x:Name="b"
                                    HorizontalAlignment="Right"
                                    hc:IconElement.Geometry="{StaticResource f.xmark}"
                                    Command="{Binding ClearSearchCommand}"
                                    Style="{StaticResource ButtonIcon.Small}"
                                    Visibility="Collapsed" />
                            </hc:SimplePanel>
                            <DataTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="b" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="a" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ContentControl.ContentTemplate>
                </ContentControl>


                <Button
                    hc:IconElement.Geometry="{StaticResource f.circle-minus}"
                    Command="{Binding GeneratePfidSheetCommand}"
                    Content="生成pfid账号"
                    Style="{StaticResource ButtonDefault.Small}" />

                <!--<hc:SimplePanel>
                    <Button
                        hc:IconElement.Geometry="{StaticResource f.file-import}"
                        Command="{Binding ImportQualificationDataCommand}"
                        Content="批量导入适当性资料"
                        Style="{StaticResource ButtonDefault.Small}" />
                    <ProgressBar
                        Height="10"
                        VerticalAlignment="Bottom"
                        Visibility="{Binding ImportQualificationDataCommand.IsRunning, Converter={StaticResource Boolean2VisibilityConverter}}"
                        Value="{Binding ImportQualificationProgress}" />
                </hc:SimplePanel>-->


                <ToggleButton
                    x:Name="showbank"
                    Background="{StaticResource WarningBrush}"
                    Content="未绑定的银行账户"
                    Foreground="White"
                    Style="{StaticResource ToggleButtonDefault.Small}"
                    Visibility="{Binding HasUndeservedAccount, Converter={StaticResource Boolean2VisibilityConverter}}" />


                <hc:UniformSpacingPanel ChildWrapping="NoWrap" Spacing="8">
                    <hc:UniformSpacingPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Height" Value="15" />

                        </Style>
                    </hc:UniformSpacingPanel.Resources>
                    <TextBlock Text="{Binding CountofInvestorsHoldingPositions, StringFormat=持仓客户数：{0}}" />

                    <TextBlock Text="{Binding CountOfNoRiskAssessment, StringFormat=风险测评缺失：{0}}" />

                    <TextBlock Text="{Binding CountOfRiskAssessmentExpired, StringFormat=过期：{0}}" />
                </hc:UniformSpacingPanel>


                <Popup
                    AllowsTransparency="True"
                    IsOpen="{Binding ElementName=showbank, Path=IsChecked}"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=showbank}"
                    StaysOpen="False">
                    <Border>
                        <DataGrid
                            AutoGenerateColumns="False"
                            IsReadOnly="True"
                            ItemsSource="{Binding UndeservedAccount}"
                            Style="{StaticResource DataGrid.NoSelect}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Name}" />
                                <DataGridTextColumn Binding="{Binding Number}" />
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <DockPanel>
                                                <Button
                                                    hc:IconElement.Geometry="{StaticResource f.check}"
                                                    Command="{Binding ConfirmCommand}"
                                                    DockPanel.Dock="Right"
                                                    Style="{StaticResource ButtonIcon.Small}"
                                                    Visibility="{Binding ElementName=cbb, Path=SelectedItem, Converter={StaticResource Object2BooleanConverter}}" />
                                                <ComboBox
                                                    x:Name="cbb"
                                                    DisplayMemberPath="Name"
                                                    ItemsSource="{Binding Customers}"
                                                    SelectedItem="{Binding DataContext.Customer, RelativeSource={RelativeSource Self}}"
                                                    Style="{StaticResource ComboBox.Small}" />
                                            </DockPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                </Popup>


            </hc:UniformSpacingPanel>
        </DockPanel>

        <local:CustomerView
            Margin="10,0,0,0"
            DataContext="{Binding Detail}"
            DockPanel.Dock="Right"
            Visibility="{Binding ., Converter={StaticResource Object2VisibilityConverter}}" />


        <DataGrid
            Name="datagrid"
            d:ItemsSource="{d:SampleData}"
            local:HelpService.Help="{StaticResource Help.Investor.Tags}"
            AutoGenerateColumns="False"
            EnableRowVirtualization="True"
            IsReadOnly="True"
            ItemsSource="{Binding CustomerSource.View}"
            SelectedItem="{Binding Selected}"
            SelectionUnit="FullRow"
            Style="{StaticResource DataGrid.ReadOnly}">
            <local:HelpService.Offset>
                <Point X="50" Y="50" />
            </local:HelpService.Offset>



            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="local:InvestorReadOnlyViewModel">
                            <hc:UniformSpacingPanel Spacing="2">

                                <Viewbox
                                    Width="12"
                                    Height="12"
                                    VerticalAlignment="Center">
                                    <Path
                                        x:Name="posi"
                                        Data="{StaticResource f.web-awesome}"
                                        Fill="Transparent" />
                                </Viewbox>
                                <Viewbox
                                    Width="12"
                                    Height="12"
                                    VerticalAlignment="Center"
                                    ToolTip="风险测评过期"
                                    Visibility="{Binding EvaluationExpired, Converter={StaticResource BooleanToVisibility2Converter}}">
                                    <Path
                                        x:Name="riske"
                                        Data="{StaticResource f.umbrella}"
                                        Fill="Red" />
                                </Viewbox>


                                <Viewbox
                                    Width="12"
                                    Height="12"
                                    VerticalAlignment="Center"
                                    ToolTip="合投">
                                    <Path
                                        x:Name="qual"
                                        Data="{StaticResource f.triangle-exclamation}"
                                        Fill="Transparent" />
                                </Viewbox>


                                <Viewbox
                                    Width="10"
                                    Height="12"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding LackOrder, Converter={StaticResource BooleanToVisibility2Converter}}">
                                    <Path Data="{StaticResource f.file-lines}" Fill="Red" />
                                </Viewbox>

                                <Viewbox
                                    Width="10"
                                    Height="10"
                                    VerticalAlignment="Center">
                                    <Path
                                        x:Name="bank"
                                        Data="{StaticResource f.credit-card}"
                                        Fill="Transparent" />
                                </Viewbox>

                                <Viewbox
                                    Width="10"
                                    Height="10"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding LackEmail, Converter={StaticResource BooleanToVisibility2Converter}}">
                                    <Path Data="{StaticResource f.envelope}" Fill="Red" />
                                </Viewbox>
                                <Viewbox
                                    Width="12"
                                    Height="12"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding LackPhone, Converter={StaticResource BooleanToVisibility2Converter}}">
                                    <Path Data="{StaticResource f.mobile-retro}" Fill="Red" />
                                </Viewbox>
                            </hc:UniformSpacingPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Holding}" Value="Previous">
                                    <Setter TargetName="posi" Property="Fill" Value="DarkGray" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Holding}" Value="Current">
                                    <Setter TargetName="posi" Property="Fill" Value="Green" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding QualificationAbnormal}" Value="True">
                                    <Setter TargetName="qual" Property="Fill" Value="Red" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding HasBankAccount}" Value="False">
                                    <Setter TargetName="bank" Property="Fill" Value="Red" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Holding}" Value="Previous">
                                    <Setter TargetName="riske" Property="Fill" Value="DarkGray" />
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding QualificationAbnormal}" Value="True" />
                                        <Condition Binding="{Binding QualificationSettled}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="qual" Property="Fill" Value="Gray" />
                                </MultiDataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <DataGridTemplateColumn Header="名称">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DockPanel LastChildFill="False">
                                <shared:CopyableControl>
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        Text="{Binding Name}"
                                        TextWrapping="Wrap" />
                                </shared:CopyableControl>

                            </DockPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--<DataGridTextColumn
                    Binding="{Binding Type}"
                    ElementStyle="{StaticResource TextBlockDefault}"
                    Header="类型" />-->
                <DataGridTemplateColumn Header="类型">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <shared:CopyableTextBlock VerticalAlignment="Center" Text="{Binding Type}" />
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="None">
                                    <Setter Property="TextElement.Foreground" Value="Red" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="证件类型">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <shared:CopyableTextBlock VerticalAlignment="Center" Text="{Binding Identity.Type}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="证件号码">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <shared:CopyableTextBlock IsMasked="True" Text="{Binding Identity.Id}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="证件有效期">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <shared:CopyableTextBlock
                                HorizontalAlignment="Center"
                                FontSize="10"
                                Text="{Binding Efficient}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn
                    Binding="{Binding RiskEvaluation}"
                    ElementStyle="{StaticResource BaseText}"
                    Header="风险等级" />


                <DataGridTemplateColumn Header="合格投资者认定">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <TextBlock Text="{Binding QualificationDate, StringFormat=yyyy-MM-dd}" />
                                <Viewbox Width="16" Visibility="{Binding QualificationAbnormal, Converter={StaticResource Boolean2VisibilityConverter}}">
                                    <Path
                                        x:Name="qual"
                                        Data="{StaticResource f.triangle-exclamation}"
                                        Fill="Red" />
                                </Viewbox>
                            </DockPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding QualificationSettled}" Value="True">
                                    <Setter TargetName="qual" Property="Fill" Value="Gray" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>
