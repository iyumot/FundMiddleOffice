<UserControl
    x:Class="FMO.PlatformPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:citics="clr-namespace:FMO.Trustee;assembly=FMO.Trustee.CITICS"
    xmlns:cms="clr-namespace:FMO.Trustee;assembly=FMO.Trustee.CMS"
    xmlns:csc="clr-namespace:FMO.Trustee;assembly=FMO.Trustee.CSC"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:FMO"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:shared="clr-namespace:FMO.Shared;assembly=FMO.Shared"
    d:DataContext="{d:DesignInstance Type=local:PlatformPageViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="1300"
    Focusable="True"
    mc:Ignorable="d">
    <UserControl.Resources>


        <DataTemplate x:Key="DT.Platform">
            <StackPanel Width="260" Margin="5,0">
                <Image
                    Height="60"
                    Margin="0,5"
                    DockPanel.Dock="Top"
                    Source="{Binding Icon}" />
                <!--<TextBlock Text="{Binding Name}" />-->
                <DockPanel>
                    <ToggleButton
                        hc:IconElement.Geometry="{StaticResource f.circle-user}"
                        hc:IconElement.Width="16"
                        DockPanel.Dock="Right"
                        IsChecked="{Binding ShowAccount}"
                        Style="{StaticResource ToggleButtonIcon.Small}" />

                    <CheckBox Content="启用" IsChecked="{Binding IsEnabled}" />

                    <DockPanel IsEnabled="{Binding IsInitialized}" LastChildFill="False">

                        <TextBlock
                            x:Name="login"
                            Margin="10,0,5,0"
                            VerticalAlignment="Center"
                            Text="{Binding LoginStatus}" />

                        <Button
                            hc:IconElement.Geometry="{StaticResource f.lightbulb}"
                            Command="{Binding LoginCommand}"
                            Style="{StaticResource ButtonDefault.Small}"
                            ToolTip="登陆" />

                    </DockPanel>
                </DockPanel>
                <StackPanel>
                    <Border Background="LightGray" Visibility="{Binding ShowAccount, Converter={StaticResource Boolean2VisibilityConverter}}">
                        <Grid Margin="2">
                            <Grid.Resources>
                                <Style BasedOn="{StaticResource TextBox.Small}" TargetType="TextBox" />
                                <Style BasedOn="{StaticResource TextBlockDefault}" TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="3,0,5,0" />
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Text="用户名" />
                            <TextBox Grid.Column="1" Text="{Binding UserId}" />
                            <TextBlock Grid.Row="1" Text="密码" />
                            <TextBox
                                Grid.Row="1"
                                Grid.Column="1"
                                Text="{Binding Password}" />

                            <Button
                                Grid.RowSpan="2"
                                Grid.Column="2"
                                hc:IconElement.Geometry="{StaticResource SaveGeometry}"
                                Command="{Binding SaveAccountCommand}"
                                Style="{StaticResource ButtonIcon}" />
                        </Grid>
                    </Border>

                    <ListBox
                        IsEnabled="{Binding IsInitialized}"
                        ItemsSource="{Binding Buttons}"
                        Style="{StaticResource ListBoxCustom}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Width="26" Height="26">
                                    <hc:LoadingCircle
                                        Width="24"
                                        Height="24"
                                        DotDiameter="3"
                                        Visibility="{Binding IsRunning, Converter={StaticResource Boolean2VisibilityConverter}}" />
                                    <Button
                                        Padding="0"
                                        hc:IconElement.Geometry="{Binding Icon}"
                                        Command="{Binding Command}"
                                        CommandParameter="{Binding .}"
                                        Style="{StaticResource ButtonIcon.Small}"
                                        ToolTip="{Binding Description}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </StackPanel>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsLogin}" Value="False">
                    <Setter TargetName="login" Property="Foreground" Value="Red" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>


        <DataTemplate DataType="{x:Type csc:CSCViewModel}">
            <StackPanel>
                <BulletDecorator>
                    <BulletDecorator.Bullet>
                        <TextBlock Text="API Key" />
                    </BulletDecorator.Bullet>
                    <TextBox Text="{Binding APIKey, UpdateSourceTrigger=PropertyChanged, Delay=200}" />
                </BulletDecorator>

                <BulletDecorator>
                    <BulletDecorator.Bullet>
                        <TextBlock Text="API Secret" />
                    </BulletDecorator.Bullet>
                    <TextBox Text="{Binding APISecret, UpdateSourceTrigger=PropertyChanged, Delay=200}" />
                </BulletDecorator>

                <BulletDecorator>
                    <BulletDecorator.Bullet>
                        <TextBlock Text="Encrypt Key" />
                    </BulletDecorator.Bullet>
                    <TextBox Text="{Binding EncryptKey, UpdateSourceTrigger=PropertyChanged, Delay=200}" />
                </BulletDecorator>
            </StackPanel>

        </DataTemplate>


        <DataTemplate DataType="{x:Type citics:CITISCViewModel}">
            <BulletDecorator>
                <BulletDecorator.Bullet>
                    <TextBlock Text="Custom Auth" />
                </BulletDecorator.Bullet>
                <TextBox Text="{Binding CustomerAuth, UpdateSourceTrigger=PropertyChanged, Delay=200}" />
            </BulletDecorator>
        </DataTemplate>


        <DataTemplate DataType="{x:Type cms:CMSViewModel}">
            <StackPanel>
                <BulletDecorator>
                    <BulletDecorator.Bullet>
                        <TextBlock Text="Company ID" />
                    </BulletDecorator.Bullet>
                    <TextBox Text="{Binding CompanyId, UpdateSourceTrigger=PropertyChanged, Delay=200}" />
                </BulletDecorator>
                <BulletDecorator>
                    <BulletDecorator.Bullet>
                        <TextBlock Text="Server Type" />
                    </BulletDecorator.Bullet>
                    <TextBox Text="{Binding ServerType, UpdateSourceTrigger=PropertyChanged, Delay=200}" />
                </BulletDecorator>
                <BulletDecorator>
                    <BulletDecorator.Bullet>
                        <TextBlock Text="Licence Key" />
                    </BulletDecorator.Bullet>
                    <TextBox Text="{Binding LicenceKey, UpdateSourceTrigger=PropertyChanged, Delay=200}" />
                </BulletDecorator>
                <BulletDecorator>
                    <BulletDecorator.Bullet>
                        <TextBlock Text="User No" />
                    </BulletDecorator.Bullet>
                    <TextBox Text="{Binding UserNo, UpdateSourceTrigger=PropertyChanged, Delay=200}" />
                </BulletDecorator>

                <DockPanel LastChildFill="False">
                    <Viewbox Width="16" Visibility="{Binding CertIsValid, Converter={StaticResource Boolean2VisibilityConverter}}">
                        <Path Data="{StaticResource f.shield}" Fill="Green" />
                    </Viewbox>
                    <TextBlock VerticalAlignment="Center" Text="已选择" />
                    <Button
                        Command="{Binding ChooseCertificateFileCommand}"
                        Content="选择证书"
                        Style="{StaticResource ButtonDefault.Small}" />
                    <hc:TextBox
                        Margin="2,0"
                        Padding="10,0"
                        hc:InfoElement.Placeholder="证书密码"
                        Style="{StaticResource TextBoxExtend.Small}"
                        Text="{Binding Password, UpdateSourceTrigger=PropertyChanged, Delay=200}" />
                    <Button
                        Command="{Binding CheckCertificateCommand}"
                        Content="校验"
                        Style="{StaticResource ButtonDefault.Small}" />
                </DockPanel>
            </StackPanel>
        </DataTemplate>


        <Style
            x:Key="TrusteeCard"
            BasedOn="{StaticResource ListBoxItemCustom}"
            TargetType="ListBoxItem">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Width" Value="300" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
                            BorderBrush="Gray"
                            BorderThickness="1"
                            CornerRadius="8">
                            <DockPanel MinHeight="40">
                                <Grid DockPanel.Dock="Top">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition x:Name="row2" Height="0" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>

                                    <hc:SimplePanel Grid.RowSpan="2">
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="24"
                                            Text="{Binding Title}"
                                            Visibility="{Binding ShowConfigSetting, Converter={StaticResource Boolean2VisibilityReConverter}}" />

                                        <hc:SimplePanel VerticalAlignment="Center" Visibility="{Binding ShowConfigSetting, Converter={StaticResource Boolean2VisibilityConverter}}">
                                            <hc:SimplePanel.Resources>
                                                <Style BasedOn="{StaticResource TextBox.Small}" TargetType="TextBox">
                                                    <Setter Property="Margin" Value="6,1,0,1" />
                                                </Style>
                                            </hc:SimplePanel.Resources>
                                            <ContentPresenter
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </hc:SimplePanel>
                                    </hc:SimplePanel>

                                    <ToggleButton
                                        Name="tog"
                                        Grid.Column="1"
                                        hc:IconElement.Geometry="{StaticResource f.gear}"
                                        BorderThickness="0"
                                        IsChecked="{Binding ShowConfigSetting}"
                                        Style="{StaticResource ToggleButtonFlip}">
                                        <ToggleButton.Content>
                                            <Viewbox Width="18" Height="18">
                                                <Path
                                                    x:Name="pn"
                                                    Data="{StaticResource f.gear}"
                                                    Fill="Black" />
                                            </Viewbox>
                                        </ToggleButton.Content>
                                        <hc:StatusSwitchElement.CheckedElement>
                                            <Viewbox Width="18" Height="18">
                                                <Path Data="{StaticResource f.reply}" Fill="Black" />
                                            </Viewbox>
                                        </hc:StatusSwitchElement.CheckedElement>
                                    </ToggleButton>

                                    <Button
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        hc:IconElement.Geometry="{StaticResource f.floppy-disk}"
                                        Command="{Binding SaveConfigCommand}"
                                        Style="{StaticResource ButtonIcon}"
                                        Visibility="{Binding ShowConfigSetting, Converter={StaticResource Boolean2VisibilityConverter}}" />

                                </Grid>
                            </DockPanel>

                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding CanSave}" Value="False">
                                <!--<Setter TargetName="tog" Property="Content">
                                    <Setter.Value>
                                        <Viewbox Width="18" Height="18">
                                            <Path Data="{StaticResource f.gear}" Fill="Red" />
                                        </Viewbox>
                                    </Setter.Value>
                                </Setter>-->
                                <Setter TargetName="pn" Property="Fill" Value="Red" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ShowConfigSetting}" Value="True">
                                <Setter TargetName="row2" Property="Height" Value="*" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <DockPanel Background="Transparent">

        <DockPanel
            Margin="0,8"
            DockPanel.Dock="Top"
            LastChildFill="False">
            <TextBlock
                VerticalAlignment="Center"
                FontSize="18"
                FontWeight="Black"
                Text="中基协账号" />

            <ListBox
                BorderThickness="0"
                ItemsPanel="{StaticResource WrapHorizontalItemsPanelTemplate}"
                ItemsSource="{Binding AmacAccounts}"
                Style="{StaticResource ListBoxCustom}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border
                            Margin="5,0"
                            Background="Transparent"
                            BorderBrush="{DynamicResource PrimaryBrush}"
                            BorderThickness="1"
                            CornerRadius="6">
                            <DockPanel Margin="5,0">
                                <TextBlock VerticalAlignment="Center" Text="{Binding Title}" />
                                <Button
                                    hc:IconElement.Geometry="{StaticResource f.arrow-up-right-from-square}"
                                    Command="{Binding GoToCommand}"
                                    Foreground="RoyalBlue"
                                    Style="{StaticResource ButtonIcon.Small}" />


                                <DockPanel
                                    Margin="0,5"
                                    LastChildFill="False"
                                    Visibility="{Binding IsReadOnly, Converter={StaticResource Boolean2VisibilityConverter}}">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        Foreground="Gray"
                                        Text="账号：" />
                                    <shared:CopyableTextBlock IsPasswordLike="True" Text="{Binding Name}" />
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        Foreground="Gray"
                                        Text="密码：" />
                                    <shared:CopyableTextBlock IsPasswordLike="True" Text="{Binding Password}" />
                                </DockPanel>

                                <DockPanel LastChildFill="False" Visibility="{Binding IsReadOnly, Converter={StaticResource Boolean2VisibilityReConverter}}">
                                    <hc:TextBox
                                        Width="90"
                                        HorizontalContentAlignment="Center"
                                        hc:InfoElement.Placeholder="账号"
                                        BorderThickness="0"
                                        Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=200}" />


                                    <hc:PasswordBox
                                        Width="110"
                                        HorizontalContentAlignment="Center"
                                        hc:InfoElement.Placeholder="密码"
                                        BorderThickness="0"
                                        IsSafeEnabled="False"
                                        UnsafePassword="{Binding Password, UpdateSourceTrigger=PropertyChanged, Delay=200}" />

                                    <Button
                                        hc:IconElement.Geometry="{StaticResource f.floppy-disk}"
                                        Command="{Binding SaveCommand}"
                                        Style="{StaticResource ButtonIcon.Small}"
                                        Visibility="{Binding IsChanged, Converter={StaticResource Boolean2VisibilityConverter}}" />
                                </DockPanel>


                                <ToggleButton
                                    Name="tog"
                                    BorderThickness="0"
                                    IsChecked="{Binding IsReadOnly}"
                                    Style="{StaticResource ToggleButtonFlip.Small}"
                                    Visibility="Collapsed">
                                    <Viewbox Width="16">
                                        <Path Data="{StaticResource f.reply}" Fill="Black" />
                                    </Viewbox>
                                    <hc:StatusSwitchElement.CheckedElement>
                                        <Viewbox Width="18">
                                            <Path Data="{StaticResource f.pen}" Fill="Green" />
                                        </Viewbox>
                                    </hc:StatusSwitchElement.CheckedElement>
                                </ToggleButton>

                            </DockPanel>
                        </Border>
                        <DataTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="tog" Property="Visibility" Value="Visible" />
                            </Trigger>

                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

        </DockPanel>

        <DockPanel DockPanel.Dock="Top" LastChildFill="False">

            <TextBlock
                VerticalAlignment="Center"
                FontSize="18"
                FontWeight="Black"
                Text="中基协直连报送" />


            <Border
                Margin="5,0"
                Background="Transparent"
                BorderBrush="{DynamicResource PrimaryBrush}"
                BorderThickness="1"
                CornerRadius="6"
                DataContext="{Binding PfidDirectAccount}">
                <DockPanel Margin="5,0">

                    <DockPanel
                        Margin="0,5"
                        LastChildFill="False"
                        Visibility="{Binding IsReadOnly, Converter={StaticResource Boolean2VisibilityConverter}}">
                        <TextBlock
                            VerticalAlignment="Center"
                            Foreground="Gray"
                            Text="账号：" />
                        <shared:CopyableTextBlock IsPasswordLike="True" Text="{Binding Name}" />
                        <TextBlock
                            VerticalAlignment="Center"
                            Foreground="Gray"
                            Text="密码：" />
                        <shared:CopyableTextBlock IsPasswordLike="True" Text="{Binding Password}" />
                        <TextBlock
                            VerticalAlignment="Center"
                            Foreground="Gray"
                            Text="密钥：" />
                        <shared:CopyableTextBlock IsPasswordLike="True" Text="{Binding Key}" />
                    </DockPanel>

                    <DockPanel LastChildFill="False" Visibility="{Binding IsReadOnly, Converter={StaticResource Boolean2VisibilityReConverter}}">
                        <hc:TextBox
                            Width="180"
                            HorizontalContentAlignment="Center"
                            hc:InfoElement.Placeholder="账号"
                            BorderThickness="0"
                            Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=200}" />


                        <hc:PasswordBox
                            Width="150"
                            HorizontalContentAlignment="Center"
                            hc:InfoElement.Placeholder="密码"
                            BorderThickness="0"
                            IsSafeEnabled="False"
                            UnsafePassword="{Binding Password, UpdateSourceTrigger=PropertyChanged, Delay=200}" />

                        <hc:TextBox
                            Width="300"
                            HorizontalContentAlignment="Center"
                            hc:InfoElement.Placeholder="密钥"
                            BorderThickness="0"
                            Text="{Binding Key, UpdateSourceTrigger=PropertyChanged, Delay=200}" />

                        <Button
                            hc:IconElement.Geometry="{StaticResource f.floppy-disk}"
                            Command="{Binding SaveCommand}"
                            Style="{StaticResource ButtonIcon.Small}"
                            Visibility="{Binding IsChanged, Converter={StaticResource Boolean2VisibilityConverter}}" />
                    </DockPanel>


                    <ToggleButton
                        Name="tog"
                        BorderThickness="0"
                        IsChecked="{Binding IsReadOnly}"
                        Style="{StaticResource ToggleButtonFlip.Small}">
                        <Viewbox Width="16">
                            <Path Data="{StaticResource f.reply}" Fill="Black" />
                        </Viewbox>
                        <hc:StatusSwitchElement.CheckedElement>
                            <Viewbox Width="18">
                                <Path Data="{StaticResource f.pen}" Fill="Green" />
                            </Viewbox>
                        </hc:StatusSwitchElement.CheckedElement>
                    </ToggleButton>

                </DockPanel>
            </Border>
        </DockPanel>


        <DockPanel DockPanel.Dock="Top">
            <TextBlock DockPanel.Dock="Top" Text="电签平台" />

            <ListBox
                BorderThickness="0"
                DockPanel.Dock="Top"
                ItemTemplate="{StaticResource DT.Platform}"
                ItemsSource="{Binding Digitals}"
                Style="{StaticResource WrapPanelHorizontalListBox}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>

        </DockPanel>


        <DockPanel
            Margin="5"
            DockPanel.Dock="Top"
            LastChildFill="False">
            <DockPanel MinWidth="550">
                <TextBlock
                    VerticalAlignment="Center"
                    FontSize="18"
                    FontWeight="Black"
                    Text="托管API" />

                <TextBlock
                    Margin="10,0,0,0"
                    VerticalAlignment="Center"
                    Foreground="Gray"
                    Text="{Binding LocalIP, StringFormat=当前ip: {0}, TargetNullValue=''}" />

                <TextBlock
                    Margin="10,0"
                    VerticalAlignment="Center"
                    Foreground="Gray"
                    Text="如果没有固定IP，可以用阿里、腾讯云等代理" />

                <CheckBox
                    Content="代理"
                    IsChecked="{Binding UseProxyForTrustee}"
                    IsEnabled="{Binding IsTrusteeProxyAvailiable}" />

                <ToggleButton
                    BorderThickness="0"
                    IsChecked="{Binding ShowProxyConfig}"
                    Style="{StaticResource ToggleButtonFlip}">
                    <Viewbox Width="16">
                        <Path Data="{StaticResource f.gear}" Fill="Black" />
                    </Viewbox>
                    <hc:StatusSwitchElement.CheckedElement>
                        <Viewbox Width="18">
                            <Path Data="{StaticResource f.reply}" Fill="Black" />
                        </Viewbox>
                    </hc:StatusSwitchElement.CheckedElement>
                </ToggleButton>

                <hc:SimplePanel Visibility="{Binding ShowProxyConfig, Converter={StaticResource Boolean2VisibilityConverter}}">
                    <ContentControl Margin="10,0" DataContext="{Binding ProxyViewModel}">
                        <DockPanel LastChildFill="False">
                            <hc:TextBox
                                Width="240"
                                hc:InfoElement.Placeholder="http://aaa.com:1123"
                                Text="{Binding Address, UpdateSourceTrigger=PropertyChanged, Delay=200}" />

                            <hc:TextBox
                                Width="130"
                                hc:InfoElement.Placeholder="user name 可以为空"
                                Text="{Binding User, UpdateSourceTrigger=PropertyChanged, Delay=200}" />

                            <hc:PasswordBox
                                Width="130"
                                hc:InfoElement.Placeholder="password 可以为空"
                                IsSafeEnabled="False"
                                UnsafePassword="{Binding Password, UpdateSourceTrigger=PropertyChanged, Delay=200}" />

                            <Button
                                Margin="5,0,0,0"
                                Command="{Binding CheckAccessCommand}"
                                Content="校验"
                                Style="{StaticResource ButtonPrimary}" />
                        </DockPanel>
                    </ContentControl>
                </hc:SimplePanel>
            </DockPanel>

            <Rectangle
                Width="2"
                Margin="10,3"
                Fill="Gray" />

            <!--  同步设置与状态  -->

            <ListBox
                BorderThickness="0"
                ItemsPanel="{StaticResource WrapHorizontalItemsPanelTemplate}"
                ItemsSource="{Binding TrusteeAPIButtons}"
                Style="{StaticResource ListBoxCustom}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel ToolTip="{Binding ToolTip}">
                            <ProgressBar
                                Width="30"
                                Height="4"
                                Margin="0,-2,0,0"
                                DockPanel.Dock="Bottom"
                                IsIndeterminate="True"
                                Style="{StaticResource ProgressBarSuccess}"
                                Visibility="{Binding Command.IsRunning, Converter={StaticResource Boolean2VisibilityConverter}}" />
                            <Button
                                hc:IconElement.Geometry="{Binding Icon}"
                                Command="{Binding Command}"
                                Style="{StaticResource ButtonIcon}" />
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>



            <!-- 暂时不启用
            <ToggleButton
                Name="apiReb"
                hc:IconElement.Geometry="{StaticResource f.gears}"
                BorderThickness="0"
                Foreground="RoyalBlue"
                IsChecked="{Binding IsTrusteeRebuildVisible}"
                ToolTip="配置" />

            <Popup
                AllowsTransparency="True"
                IsOpen="{Binding IsTrusteeRebuildVisible}"
                Placement="Center"
                PlacementTarget="{Binding ElementName=apiReb}"
                StaysOpen="False">
                <Border
                    Width="800"
                    Height="800"
                    Background="WhiteSmoke">
                    <local:TrusteeWorkerSettingView />
                </Border>
            </Popup>-->


            <!--  运行报告  -->
            <ToggleButton
                Name="apiRepBtn"
                hc:IconElement.Geometry="{StaticResource f.grip}"
                BorderThickness="0"
                Command="{Binding ViewTrusteeWorkReportCommand}"
                DockPanel.Dock="Right"
                Foreground="DarkKhaki"
                IsChecked="{Binding IsTrusteeReportVisible}" />

            <Popup
                AllowsTransparency="True"
                IsOpen="{Binding IsTrusteeReportVisible}"
                Placement="Left"
                PlacementTarget="{Binding ElementName=apiRepBtn}"
                StaysOpen="False">
                <Border Background="WhiteSmoke" CornerRadius="10">
                    <DataGrid
                        MaxHeight="700"
                        AutoGenerateColumns="False"
                        EnableRowVirtualization="True"
                        IsReadOnly="True"
                        ItemsSource="{Binding TrusteeWorkLogSource.View}"
                        Style="{StaticResource DataGrid.Small}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Identifier}" Header="托管" />
                            <DataGridTextColumn Binding="{Binding Method}" Header="方法" />
                            <DataGridTextColumn Binding="{Binding Time, StringFormat=HH:mm:ss}" Header="时间" />

                            <DataGridTextColumn MaxWidth="700">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding StringFormat="{}{0} {1}">
                                        <Binding Path="Log" />
                                        <Binding Path="Content" />
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>

                        </DataGrid.Columns>
                    </DataGrid>
                    <!--<ListBox
                        MaxHeight="500"
                        Margin="5"
                        Background="Transparent"
                        BorderThickness="0"
                        ItemsSource="{Binding TrusteeWorkLogSource.View}"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        Style="{StaticResource ListBoxCustom}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DockPanel Background="Transparent">
                                    <TextBlock Width="90" Text="{Binding Identifier}" />
                                    <TextBlock Text="{Binding Method}" />
                                    <TextBlock Margin="6,0" Text="{Binding Time, StringFormat=HH:mm}" />
                                    <DockPanel MaxWidth="700">
                                        <TextBlock Text="{Binding Log}" TextWrapping="WrapWithOverflow" />
                                        <TextBlock Margin="10,0,0,0" Text="{Binding Content}" />
                                    </DockPanel>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>-->
                </Border>
            </Popup>


            <ToggleButton
                Name="apiConfigBtn"
                hc:IconElement.Geometry="{StaticResource f.gear}"
                BorderThickness="0"
                Command="{Binding ViewTrusteeConfigCommand}"
                DockPanel.Dock="Right" />


            <!--<Popup
                AllowsTransparency="True"
                IsOpen="{Binding ElementName=apiConfigBtn, Path=IsChecked}"
                Placement="Left"
                PlacementTarget="{Binding ElementName=apiConfigBtn}"
                StaysOpen="False">
                <Border>
                    <local:TrusteeWorkerSettingView />
                </Border>
            </Popup>-->
        </DockPanel>



        <!--<ListBox
            BorderThickness="0"
            ItemTemplate="{StaticResource DT.Platform}"
            ItemsSource="{Binding Trustees}"
            Style="{StaticResource WrapPanelHorizontalListBox}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>-->

        <ListBox
            BorderThickness="0"
            ItemContainerStyle="{StaticResource TrusteeCard}"
            ItemsSource="{Binding Trustees2}"
            Style="{StaticResource ListBoxCustom}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>


    </DockPanel>
</UserControl>
