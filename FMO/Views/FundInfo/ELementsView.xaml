<UserControl
    x:Class="FMO.ElementsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:FMO"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:FMO.Models;assembly=FMO.Models"
    xmlns:shared="clr-namespace:FMO.Shared;assembly=FMO.Shared"
    d:DataContext="{d:DesignInstance Type=local:ElementsViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>

        <Style
            x:Key="SaveElement"
            BasedOn="{StaticResource ButtonBaseStyle}"
            TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="18" />
            <Setter Property="Height" Value="18" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="hc:IconElement.Geometry" Value="{StaticResource f.circle-check}" />
            <Setter Property="hc:IconElement.Width" Value="15" />
            <Setter Property="Visibility" Value="{Binding CanConfirm, Converter={StaticResource Boolean2VisibilityConverter}}" />
            <Setter Property="Command" Value="{Binding DataContext.ModifyCommand, RelativeSource={RelativeSource AncestorType=local:ElementsView}}" />
            <Setter Property="CommandParameter" Value="{Binding .}" />
        </Style>
        <Style
            x:Key="DeleteElement"
            BasedOn="{StaticResource ButtonBaseStyle}"
            TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="Width" Value="14" />
            <Setter Property="Height" Value="14" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="hc:IconElement.Geometry" Value="{StaticResource f.xmark}" />
            <Setter Property="Visibility" Value="{Binding CanDelete, Converter={StaticResource Boolean2VisibilityConverter}}" />
            <Setter Property="Command" Value="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=local:ElementsView}}" />
            <Setter Property="CommandParameter" Value="{Binding .}" />
        </Style>
        <Style
            x:Key="ResetElement"
            BasedOn="{StaticResource ButtonBaseStyle}"
            TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="Blue" />
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="hc:IconElement.Geometry" Value="{StaticResource f.rotate-left}" />
            <Setter Property="hc:IconElement.Width" Value="12" />
            <Setter Property="Visibility" Value="{Binding HasUnsavedValue, Converter={StaticResource Boolean2VisibilityConverter}}" />
            <Setter Property="Command" Value="{Binding DataContext.ResetCommand, RelativeSource={RelativeSource AncestorType=local:ElementsView}}" />
            <Setter Property="CommandParameter" Value="{Binding .}" />
        </Style>

        <SolidColorBrush x:Key="LabelBrush">Gray</SolidColorBrush>

        <Thickness
            x:Key="LineSpacing"
            Bottom="2"
            Left="0"
            Right="0"
            Top="2" />




        <Style x:Key="ElementContainer" TargetType="ContentControl">
            <Setter Property="Content" Value="{Binding}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <DockPanel Background="Transparent" LastChildFill="False">
                            <TextBlock
                                VerticalAlignment="Center"
                                Foreground="{StaticResource LabelBrush}"
                                Text="{Binding Label}" />
                            <local:CopyableControl Margin="10,0,0,0" Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityConverter}}">
                                <TextBlock Text="{Binding Display}" />
                            </local:CopyableControl>


                            <DockPanel Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityReConverter}}">
                                <ContentPresenter
                                    Margin="4,0"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />

                                <Button Style="{StaticResource ResetElement}" />
                                <Button Style="{StaticResource SaveElement}" />
                                <Grid x:Name="x" Visibility="Collapsed">
                                    <Button Style="{StaticResource DeleteElement}" />
                                </Grid>
                            </DockPanel>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="x" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="HorizontalContentAlignment" Value="Stretch">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ContentControl">
                                <DockPanel Background="Transparent">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        Foreground="{StaticResource LabelBrush}"
                                        Text="{Binding Label}" />
                                    <local:CopyableControl Margin="10,0,0,0" Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityConverter}}">
                                        <TextBlock Text="{Binding Display}" />
                                    </local:CopyableControl>

                                    <DockPanel Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityReConverter}}">
                                        <Button DockPanel.Dock="Right" Style="{StaticResource SaveElement}" />

                                        <Button DockPanel.Dock="Right" Style="{StaticResource ResetElement}" />

                                        <Grid
                                            x:Name="x"
                                            DockPanel.Dock="Right"
                                            Visibility="Collapsed">
                                            <Button Style="{StaticResource DeleteElement}" />
                                        </Grid>

                                        <ContentPresenter
                                            Margin="4,0"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}" />

                                    </DockPanel>

                                </DockPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="x" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>



        <ControlTemplate x:Key="Element" TargetType="ContentControl">
            <DockPanel Background="Transparent">
                <TextBlock
                    VerticalAlignment="Center"
                    Foreground="{StaticResource LabelBrush}"
                    Text="{Binding Label}" />
                <local:CopyableControl Margin="10,0,0,0" Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityConverter}}">
                    <TextBlock Text="{Binding Display}" />
                </local:CopyableControl>
                <DockPanel Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityReConverter}}">

                    <ContentPresenter
                        Margin="4,0"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}" />
                </DockPanel>
            </DockPanel>
        </ControlTemplate>


        <ControlTemplate x:Key="Element.Left" TargetType="ContentControl">
            <DockPanel Background="Transparent" LastChildFill="False">
                <TextBlock
                    VerticalAlignment="Center"
                    Foreground="{StaticResource LabelBrush}"
                    Text="{Binding Label}" />

                <local:CopyableControl Margin="10,0,0,0" Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityConverter}}">
                    <TextBlock Text="{Binding Data.Old}" />
                </local:CopyableControl>

                <DockPanel Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityReConverter}}">
                    <ContentPresenter
                        Margin="4,0"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}" />
                    <Button DockPanel.Dock="Right" Style="{StaticResource SaveElement}" />

                    <Button DockPanel.Dock="Right" Style="{StaticResource ResetElement}" />

                    <Grid
                        x:Name="x"
                        DockPanel.Dock="Right"
                        Visibility="Collapsed">
                        <Button Style="{StaticResource DeleteElement}" />
                    </Grid>
                </DockPanel>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="x" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <DataTemplate x:Key="FundMode">
            <DockPanel>
                <ComboBox
                    Width="80"
                    Margin="4,0,0,0"
                    ItemsSource="{Binding Source={x:Static local:ElementsViewModel.FundModes}}"
                    SelectedItem="{Binding NewValue.Data}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ., Converter={StaticResource EnumDescriptionConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <TextBox
                    x:Name="other"
                    MinWidth="100"
                    Text="{Binding NewValue.Extra, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                    Visibility="Collapsed" />

            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding NewValue.Data}" Value="Other">
                    <Setter TargetName="other" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>


        <ControlTemplate x:Key="ExItem" TargetType="ContentControl">
            <DockPanel>
                <TextBlock
                    VerticalAlignment="Center"
                    Foreground="{StaticResource LabelBrush}"
                    Text="{Binding Label}" />

                <local:CopyableControl Margin="10,0,0,0" Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityConverter}}">
                    <TextBlock Text="{Binding Data.Old}" />
                </local:CopyableControl>

                <DockPanel Visibility="{Binding DataContext.IsReadOnly, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityReConverter}}">
                    <Button
                        hc:IconElement.Geometry="{StaticResource f.circle-check}"
                        Command="{Binding DataContext.ModifyCommand, RelativeSource={RelativeSource AncestorType=local:ElementsView}}"
                        CommandParameter="{Binding .}"
                        DockPanel.Dock="Right"
                        Visibility="{Binding CanConfirm, Converter={StaticResource Boolean2VisibilityConverter}}" />

                    <ComboBox
                        Width="80"
                        Margin="4,0"
                        ItemsSource="{Binding Source={x:Static local:ElementsViewModel.FundModes}}"
                        SelectedItem="{Binding Data.New}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ., Converter={StaticResource EnumDescriptionConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <TextBox
                        x:Name="other"
                        MinWidth="100"
                        Text="{Binding Extra.New, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                        Visibility="Collapsed" />
                </DockPanel>
            </DockPanel>
        </ControlTemplate>


        <DataTemplate x:Key="Sealing">
            <DockPanel LastChildFill="False">

                <ComboBox
                    Width="70"
                    Margin="4,0"
                    ItemsSource="{Binding DataContext.SealingTypes, RelativeSource={RelativeSource AncestorType=local:ElementsView}}"
                    SelectedItem="{Binding NewValue.Type}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ., Converter={StaticResource EnumDescriptionConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>


                <Grid x:Name="mon" Visibility="Collapsed">
                    <TextBox
                        MinWidth="60"
                        Padding="6,0,30,0"
                        Text="{Binding NewValue.Month, UpdateSourceTrigger=PropertyChanged, Delay=300}" />
                    <TextBlock
                        Margin="6,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Text="个月" />
                </Grid>

                <TextBox
                    x:Name="other"
                    MinWidth="100"
                    Text="{Binding NewValue.Extra, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                    Visibility="Collapsed" />

            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding NewValue.Type}" Value="Other">
                    <Setter TargetName="other" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NewValue.Type}" Value="Has">
                    <Setter TargetName="mon" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="Element.FundFee">
            <DockPanel LastChildFill="False">


                <ComboBox
                    Width="90"
                    Margin="4,0"
                    ItemsSource="{Binding DataContext.FundFeeTypes, RelativeSource={RelativeSource AncestorType=local:ElementsView}}"
                    SelectedItem="{Binding NewValue.Type}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ., Converter={StaticResource EnumDescriptionConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>


                <TextBox
                    x:Name="mon"
                    MinWidth="40"
                    HorizontalContentAlignment="Center"
                    Text="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                    Visibility="Collapsed" />
                <TextBlock
                    x:Name="a"
                    Margin="4,0"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Text="%"
                    Visibility="Collapsed" />
                <TextBlock
                    x:Name="b"
                    Margin="4,0"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Text="元"
                    Visibility="Collapsed" />


                <TextBox
                    x:Name="other"
                    MinWidth="300"
                    Text="{Binding Extra.New, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                    Visibility="Collapsed" />

            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding NewValue.Type}" Value="Other">
                    <Setter TargetName="other" Property="Visibility" Value="Visible" />
                    <Setter TargetName="mon" Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NewValue.Type}" Value="Ratio">
                    <Setter TargetName="mon" Property="Visibility" Value="Visible" />
                    <Setter TargetName="a" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NewValue.Type}" Value="Fix">
                    <Setter TargetName="mon" Property="Visibility" Value="Visible" />
                    <Setter TargetName="b" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="Element.FundFee.G">
            <DockPanel LastChildFill="False">
                <ComboBox
                    Width="90"
                    Margin="4,0"
                    ItemsSource="{Binding DataContext.FundFeeTypes, RelativeSource={RelativeSource AncestorType=local:ElementsView}}"
                    SelectedItem="{Binding NewValue.Type}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ., Converter={StaticResource EnumDescriptionConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>


                <TextBox
                    x:Name="mon"
                    MinWidth="40"
                    HorizontalContentAlignment="Center"
                    Text="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=300}" />
                <TextBlock
                    x:Name="a"
                    Margin="4,0"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Text="%"
                    Visibility="Collapsed" />
                <TextBlock
                    x:Name="b"
                    Margin="4,0"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Text="元"
                    Visibility="Collapsed" />
                <TextBox
                    x:Name="other"
                    MinWidth="300"
                    Text="{Binding Extra.New, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                    Visibility="Collapsed" />
                <CheckBox
                    Margin="4,0"
                    Content="保底"
                    IsChecked="{Binding IsAdopted.New}" />


                <TextBox
                    x:Name="gr"
                    MinWidth="40"
                    HorizontalContentAlignment="Center"
                    Text="{Binding Data2.New, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                    Visibility="{Binding IsAdopted.New, Converter={StaticResource Boolean2VisibilityConverter}}" />

                <TextBlock
                    x:Name="ad"
                    Margin="4,0"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Text="元"
                    Visibility="{Binding IsAdopted.New, Converter={StaticResource Boolean2VisibilityConverter}}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding NewValue.Type}" Value="Other">
                    <Setter TargetName="other" Property="Visibility" Value="Visible" />
                    <Setter TargetName="mon" Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NewValue.Type}" Value="Ratio">
                    <Setter TargetName="a" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NewValue.Type}" Value="Fix">
                    <Setter TargetName="b" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="Element.PerformanceBenchmarks">
            <DockPanel LastChildFill="False">

                <CheckBox
                    x:Name="ck"
                    Margin="4,0"
                    VerticalAlignment="Center"
                    Content="无"
                    IsChecked="{Binding IsAdopted.New}" />


                <TextBox
                    x:Name="mon"
                    MinWidth="140"
                    HorizontalContentAlignment="Center"
                    Text="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                    Visibility="{Binding IsAdopted.New, Converter={StaticResource Boolean2VisibilityConverter}}" />

            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsAdopted.New}" Value="True">
                    <Setter TargetName="ck" Property="Content" Value="有" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>


        <DataTemplate x:Key="Portion.Sealing">
            <DockPanel LastChildFill="False">


                <ComboBox
                    Width="70"
                    Margin="4,0"
                    ItemsSource="{Binding DataContext.SealingTypes, RelativeSource={RelativeSource AncestorType=local:ElementsView}}"
                    SelectedItem="{Binding NewValue.Type}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ., Converter={StaticResource EnumDescriptionConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>


                <TextBox
                    x:Name="mon"
                    MinWidth="40"
                    Text="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=300, StringFormat={}{0}个月}"
                    Visibility="Collapsed" />

                <TextBox
                    x:Name="other"
                    MinWidth="100"
                    Text="{Binding Extra.New, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                    Visibility="Collapsed" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding NewValue.Type}" Value="Other">
                    <Setter TargetName="other" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding NewValue.Type}" Value="Has">
                    <Setter TargetName="mon" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>



        <DataTemplate x:Key="DT.Portion" d:DataType="local:ShareElementsViewModel">
            <DockPanel>
                <Border
                    x:Name="bd"
                    Margin="0,0,10,0"
                    Background="WhiteSmoke"
                    Visibility="{Binding DataContext.OnlyOneShare, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityReConverter}}">
                    <DockPanel Margin="8">
                        <TextBlock DockPanel.Dock="Top" Text="份额" />
                        <TextBlock HorizontalAlignment="Center" Text="{Binding Class}" />
                    </DockPanel>
                </Border>


                <StackPanel>
                    <WrapPanel>
                        <ContentControl
                            ContentTemplate="{StaticResource Element.FundFee}"
                            DataContext="{Binding SubscriptionFee}"
                            Style="{StaticResource ElementContainer}" />

                        <Border Margin="10,5" />

                        <ContentControl
                            ContentTemplate="{StaticResource Element.FundFee}"
                            DataContext="{Binding PurchaseFee}"
                            Style="{StaticResource ElementContainer}" />

                        <Border Margin="10,5" />

                        <ContentControl
                            ContentTemplate="{StaticResource Element.FundFee}"
                            DataContext="{Binding RedemptionFee}"
                            Style="{StaticResource ElementContainer}" />

                        <Border Margin="10,5" />

                        <ContentControl
                            ContentTemplate="{StaticResource Element.FundFee}"
                            DataContext="{Binding ManageFee}"
                            Style="{StaticResource ElementContainer}" />

                    </WrapPanel>

                    <StackPanel Margin="0,5" Orientation="Horizontal">

                        <Border Margin="10,5" />

                        <ContentControl
                            ContentTemplate="{StaticResource Portion.Sealing}"
                            DataContext="{Binding LockingRule}"
                            Style="{StaticResource ElementContainer}"
                            Visibility="{Binding DataContext.IsSealingFund, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityReConverter}}" />



                    </StackPanel>
                </StackPanel>

            </DockPanel>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Class}" Value="{x:Static model:FundElements.SingleShareKey}">
                    <Setter TargetName="bd" Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>



        <ItemsPanelTemplate x:Key="PortionItemsPanel">
            <UniformGrid Columns="1" IsItemsHost="True" />
        </ItemsPanelTemplate>

    </UserControl.Resources>


    <StackPanel Margin="0,10">
        <StackPanel.Resources>
            <Style TargetType="Separator">
                <Setter Property="Margin" Value="0,10" />
            </Style>
        </StackPanel.Resources>

        <Grid Margin="{StaticResource LineSpacing}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>


            <shared:ChangeableContainer Binding="{Binding FullName}" />

            <shared:ChangeableContainer Grid.Column="1" Binding="{Binding ShortName}" />



            <ToggleButton
                Grid.Column="2"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                IsChecked="{Binding IsReadOnly}"
                Style="{StaticResource ToggleButtonFlip}">
                <hc:StatusSwitchElement.CheckedElement>
                    <Viewbox Width="16" Height="16">
                        <Path Data="{StaticResource f.pen}" Fill="Green" />
                    </Viewbox>
                </hc:StatusSwitchElement.CheckedElement>
                <Viewbox Width="18" Height="18">
                    <Path Data="{StaticResource f.eye}" Fill="Black" />
                </Viewbox>
            </ToggleButton>
        </Grid>

        <DockPanel Margin="{StaticResource LineSpacing}" LastChildFill="False">


            <shared:ChangeableContainer Binding="{Binding FundModeInfo}" ContentTemplate="{StaticResource FundMode}" />



            <shared:ChangeableContainer
                Binding="{Binding SealingRule}"
                ContentTemplate="{StaticResource Sealing}"
                Visibility="{Binding DataContext.IsSealingFund, RelativeSource={RelativeSource AncestorType=local:ElementsView}, Converter={StaticResource Boolean2VisibilityReConverter}}" />




            <ContentControl DataContext="{Binding OpenDayInfo}" Style="{StaticResource ElementContainer}">
                <TextBox MinWidth="300" Text="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
            </ContentControl>

        </DockPanel>


        <!--  风险等级 止损预警  -->
        <DockPanel Margin="{StaticResource LineSpacing}" LastChildFill="False">



            <ContentControl DataContext="{Binding RiskLevel}" Style="{StaticResource ElementContainer}">
                <ComboBox
                    Width="60"
                    ItemsSource="{Binding Source={x:Static local:ElementsViewModel.RiskLevels}}"
                    SelectedItem="{Binding Data.New}" />
            </ContentControl>

            <ContentControl
                Margin="20,0,0,0"
                DataContext="{Binding DurationInMonths}"
                Style="{StaticResource ElementContainer}">
                <DockPanel>
                    <TextBox
                        Width="50"
                        HorizontalContentAlignment="Center"
                        Text="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
                    <TextBlock VerticalAlignment="Center" Text="个月" />
                </DockPanel>
            </ContentControl>

            <ContentControl
                Margin="8,0"
                DataContext="{Binding ExpirationDate}"
                Style="{StaticResource ElementContainer}">
                <DatePicker Width="120" SelectedDate="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=100, Converter={StaticResource DataTimeDateOnlySwitchConverter}}" />
            </ContentControl>


            <ContentControl
                Margin="20,0,0,0"
                DataContext="{Binding StopLine}"
                Style="{StaticResource ElementContainer}">
                <TextBox
                    Width="50"
                    HorizontalContentAlignment="Center"
                    Text="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=400}" />
            </ContentControl>

            <ContentControl
                Margin="8,0"
                DataContext="{Binding WarningLine}"
                Style="{StaticResource ElementContainer}">
                <TextBox
                    Width="50"
                    HorizontalContentAlignment="Center"
                    Text="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=400}" />
            </ContentControl>
        </DockPanel>


        <Separator />

        <!--  投资相关  -->
        <DockPanel Margin="{StaticResource LineSpacing}" LastChildFill="False">
            <ContentControl
                HorizontalContentAlignment="Stretch"
                DataContext="{Binding InvestmentObjective}"
                Style="{StaticResource ElementContainer}">
                <TextBox MinWidth="300" Text="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
            </ContentControl>

            <ContentControl
                Margin="20,0,0,0"
                VerticalAlignment="Center"
                ContentTemplate="{StaticResource Element.PerformanceBenchmarks}"
                DataContext="{Binding PerformanceBenchmarks}"
                Style="{StaticResource ElementContainer}" />

        </DockPanel>

        <UniformGrid Margin="{StaticResource LineSpacing}" Rows="1">
            <ContentControl
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                DataContext="{Binding InvestmentScope}"
                Style="{StaticResource ElementContainer}">
                <TextBox
                    MinWidth="300"
                    AcceptsReturn="True"
                    Text="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
            </ContentControl>

            <ContentControl
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                DataContext="{Binding InvestmentStrategy}"
                Style="{StaticResource ElementContainer}">
                <TextBox
                    MinWidth="300"
                    AcceptsReturn="True"
                    Text="{Binding Data.New, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
            </ContentControl>
        </UniformGrid>


        <Separator />

        <!--  费用  -->
        <DockPanel Margin="{StaticResource LineSpacing}" LastChildFill="False">

            <ContentControl
                ContentTemplate="{StaticResource Element.FundFee.G}"
                DataContext="{Binding TrusteeFee}"
                Style="{StaticResource ElementContainer}" />
            <!--<ContentControl DataContext="{Binding TrusteeGuaranteedFee}" Template="{StaticResource Element.Bool}" />-->

            <Separator Width="2" Margin="20,0" />

            <ContentControl
                ContentTemplate="{StaticResource Element.FundFee.G}"
                DataContext="{Binding OutsourcingFee}"
                Style="{StaticResource ElementContainer}" />
            <!--<ContentControl DataContext="{Binding OutsourcingGuaranteedFee}" Template="{StaticResource Element.Bool}" />-->


        </DockPanel>



        <!--  账户  -->
        <DockPanel Margin="{StaticResource LineSpacing}">
            <DockPanel.Resources>
                <DataTemplate x:Key="DT.Bank">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="MinWidth" Value="70" />
                                <Setter Property="TextAlignment" Value="Right" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="0,0,4,0" />
                            </Style>
                        </StackPanel.Resources>
                        <DockPanel>
                            <TextBlock Text="户名" />
                            <TextBox Text="{Binding NewValue.Name, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="账号" />
                            <TextBox Text="{Binding NewValue.Number, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="开户行" />
                            <TextBox Text="{Binding NewValue.Deposit, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
                        </DockPanel>

                        <DockPanel>
                            <TextBlock Text="大额支付号" />
                            <TextBox Text="{Binding NewValue.LargePayNo, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="Swift" />
                            <TextBox Text="{Binding NewValue.SwiftCode, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
                        </DockPanel>
                    </StackPanel>
                </DataTemplate>

                <ControlTemplate x:Key="CT.Bank" TargetType="UserControl">
                    <DockPanel
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="Transparent"
                        LastChildFill="True">

                        <Grid DockPanel.Dock="Top">

                            <shared:ChangeableControlButtons Margin="110,0" HorizontalAlignment="Right" />

                            <DockPanel HorizontalAlignment="Center" LastChildFill="False">
                                <Button
                                    hc:IconElement.Geometry="{StaticResource f.clipboard}"
                                    Command="{Binding SetBankFromClipboardCommand}"
                                    CommandParameter="{Binding CollectionAccount}"
                                    DockPanel.Dock="Right"
                                    Foreground="Green"
                                    Style="{StaticResource ButtonIcon}" />
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Text="募集账户" />
                            </DockPanel>
                        </Grid>

                        <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <DockPanel>
                                <ContentPresenter
                                    Margin="4,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{Binding Binding, RelativeSource={RelativeSource AncestorType=shared:ChangeableContainer}}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />

                            </DockPanel>
                        </DockPanel>
                    </DockPanel>

                </ControlTemplate>
            </DockPanel.Resources>
            <TextBlock
                Margin="10"
                DockPanel.Dock="Right"
                Foreground="Gray"
                IsHitTestVisible="False"
                Visibility="{Binding IsReadOnly, Converter={StaticResource Boolean2VisibilityReConverter}}">
                <Run>可复制后点击绿色按键</Run>
                <LineBreak />
                <Run>自动识别账户信息</Run>
                <LineBreak />
                <LineBreak />
                <Run>账户 | 账户名称：xxxxxx</Run>
                <LineBreak />
                <Run>账号：00000</Run>
                <LineBreak />
                <Run>开户行：xxxx</Run>
                <LineBreak />
                <Run>.....</Run>
            </TextBlock>

            <UniformGrid Rows="1">
                <shared:ChangeableContainer
                    Binding="{Binding CollectionAccount}"
                    ContentTemplate="{StaticResource DT.Bank}"
                    EditTemplate="{StaticResource CT.Bank}"
                    StripPlacement="Top" />


                <shared:ChangeableContainer
                    Binding="{Binding CustodyAccount}"
                    ContentTemplate="{StaticResource DT.Bank}"
                    EditTemplate="{StaticResource CT.Bank}"
                    StripPlacement="Top" />

            </UniformGrid>
        </DockPanel>

        <!--  与份额相关的要素  -->
        <Grid>
            <!--<Grid Visibility="{Binding OnlyOneShare, Converter={StaticResource Boolean2VisibilityConverter}}">
                <ContentControl Content="{Binding PortionElements[0]}" ContentTemplate="{StaticResource DT.Portion.Single}" />
            </Grid>-->
            <ListBox
                Margin="0,20,0,0"
                BorderThickness="0"
                ItemTemplate="{StaticResource DT.Portion}"
                ItemsPanel="{DynamicResource PortionItemsPanel}"
                ItemsSource="{Binding PortionElements}"
                Style="{StaticResource ListBoxCustom}" />
        </Grid>
    </StackPanel>

</UserControl>
